                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.8 #9946 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module txt_scroll_hard
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _scroll_hard
                             12 	.globl _draw_char
                             13 	.globl _cpct_getScreenPtr
                             14 	.globl _cpct_drawTileAligned2x8_f
                             15 	.globl _texte
                             16 ;--------------------------------------------------------
                             17 ; special function registers
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; ram data
                             21 ;--------------------------------------------------------
                             22 	.area _DATA
                             23 ;--------------------------------------------------------
                             24 ; ram data
                             25 ;--------------------------------------------------------
                             26 	.area _INITIALIZED
                             27 ;--------------------------------------------------------
                             28 ; absolute external ram data
                             29 ;--------------------------------------------------------
                             30 	.area _DABS (ABS)
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _HOME
                             35 	.area _GSINIT
                             36 	.area _GSFINAL
                             37 	.area _GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _HOME
                             42 	.area _HOME
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area _CODE
                             47 ;src/txt_scroll_hard.c:13: void draw_char(u8 c, u8* image, u8* plot) {
                             48 ;	---------------------------------
                             49 ; Function draw_char
                             50 ; ---------------------------------
   0000                      51 _draw_char::
   0000 DD E5         [15]   52 	push	ix
   0002 DD 21 00 00   [14]   53 	ld	ix,#0
   0006 DD 39         [15]   54 	add	ix,sp
   0008 21 FA FF      [10]   55 	ld	hl, #-6
   000B 39            [11]   56 	add	hl, sp
   000C F9            [ 6]   57 	ld	sp, hl
                             58 ;src/txt_scroll_hard.c:21: last_plot=plot+ 0x4000 +80u*c+ 0x3801;
   000D DD 4E 04      [19]   59 	ld	c, 4 (ix)
   0010 06 00         [ 7]   60 	ld	b, #0x00
   0012 69            [ 4]   61 	ld	l, c
   0013 60            [ 4]   62 	ld	h, b
   0014 29            [11]   63 	add	hl, hl
   0015 29            [11]   64 	add	hl, hl
   0016 09            [11]   65 	add	hl, bc
   0017 29            [11]   66 	add	hl, hl
   0018 29            [11]   67 	add	hl, hl
   0019 29            [11]   68 	add	hl, hl
   001A 29            [11]   69 	add	hl, hl
   001B DD 75 FE      [19]   70 	ld	-2 (ix), l
   001E DD 74 FF      [19]   71 	ld	-1 (ix), h
   0021 DD 7E FE      [19]   72 	ld	a, -2 (ix)
   0024 C6 01         [ 7]   73 	add	a, #0x01
   0026 4F            [ 4]   74 	ld	c, a
   0027 DD 7E FF      [19]   75 	ld	a, -1 (ix)
   002A CE 78         [ 7]   76 	adc	a, #0x78
   002C 47            [ 4]   77 	ld	b, a
   002D DD 6E 07      [19]   78 	ld	l,7 (ix)
   0030 DD 66 08      [19]   79 	ld	h,8 (ix)
   0033 09            [11]   80 	add	hl, bc
                             81 ;src/txt_scroll_hard.c:23: if (last_plot<0x4000) {
                             82 ;src/txt_scroll_hard.c:37: for (y=0;y<8;y++) {
   0034 DD 7E 07      [19]   83 	ld	a, 7 (ix)
   0037 C6 00         [ 7]   84 	add	a, #0x00
   0039 4F            [ 4]   85 	ld	c, a
   003A DD 7E 08      [19]   86 	ld	a, 8 (ix)
   003D CE 40         [ 7]   87 	adc	a, #0x40
   003F 47            [ 4]   88 	ld	b, a
                             89 ;src/txt_scroll_hard.c:40: cur_image=image+(c*8+((y+1)%8))*2+x;
   0040 DD 5E 04      [19]   90 	ld	e, 4 (ix)
   0043 16 00         [ 7]   91 	ld	d, #0x00
                             92 ;src/txt_scroll_hard.c:23: if (last_plot<0x4000) {
   0045 7C            [ 4]   93 	ld	a, h
   0046 D6 40         [ 7]   94 	sub	a, #0x40
   0048 D2rF8r00      [10]   95 	jp	NC, 00106$
                             96 ;src/txt_scroll_hard.c:37: for (y=0;y<8;y++) {
   004B DD 7E FE      [19]   97 	ld	a, -2 (ix)
   004E 81            [ 4]   98 	add	a, c
   004F DD 77 FE      [19]   99 	ld	-2 (ix), a
   0052 DD 7E FF      [19]  100 	ld	a, -1 (ix)
   0055 88            [ 4]  101 	adc	a, b
   0056 DD 77 FF      [19]  102 	ld	-1 (ix), a
   0059 0E 00         [ 7]  103 	ld	c, #0x00
                            104 ;src/txt_scroll_hard.c:38: for (x=0;x<2;x++) {
   005B                     105 00116$:
   005B 06 00         [ 7]  106 	ld	b, #0x00
   005D                     107 00108$:
                            108 ;src/txt_scroll_hard.c:39: cur_plot=plot+ 0x4000 +80u*c+ ((y % 8u) * 2048u) + x;
   005D 79            [ 4]  109 	ld	a, c
   005E E6 07         [ 7]  110 	and	a, #0x07
   0060 07            [ 4]  111 	rlca
   0061 07            [ 4]  112 	rlca
   0062 07            [ 4]  113 	rlca
   0063 E6 F8         [ 7]  114 	and	a, #0xf8
   0065 67            [ 4]  115 	ld	h, a
   0066 2E 00         [ 7]  116 	ld	l, #0x00
   0068 DD 7E FE      [19]  117 	ld	a, -2 (ix)
   006B 85            [ 4]  118 	add	a, l
   006C 6F            [ 4]  119 	ld	l, a
   006D DD 7E FF      [19]  120 	ld	a, -1 (ix)
   0070 8C            [ 4]  121 	adc	a, h
   0071 67            [ 4]  122 	ld	h, a
   0072 7D            [ 4]  123 	ld	a, l
   0073 80            [ 4]  124 	add	a, b
   0074 6F            [ 4]  125 	ld	l, a
   0075 7C            [ 4]  126 	ld	a, h
   0076 CE 00         [ 7]  127 	adc	a, #0x00
   0078 67            [ 4]  128 	ld	h, a
   0079 33            [ 6]  129 	inc	sp
   007A 33            [ 6]  130 	inc	sp
   007B E5            [11]  131 	push	hl
                            132 ;src/txt_scroll_hard.c:40: cur_image=image+(c*8+((y+1)%8))*2+x;
   007C DD 73 FC      [19]  133 	ld	-4 (ix), e
   007F DD 72 FD      [19]  134 	ld	-3 (ix), d
   0082 3E 04         [ 7]  135 	ld	a, #0x03+1
   0084 18 08         [12]  136 	jr	00141$
   0086                     137 00140$:
   0086 DD CB FC 26   [23]  138 	sla	-4 (ix)
   008A DD CB FD 16   [23]  139 	rl	-3 (ix)
   008E                     140 00141$:
   008E 3D            [ 4]  141 	dec	a
   008F 20 F5         [12]  142 	jr	NZ,00140$
   0091 69            [ 4]  143 	ld	l, c
   0092 26 00         [ 7]  144 	ld	h, #0x00
   0094 23            [ 6]  145 	inc	hl
   0095 E5            [11]  146 	push	hl
   0096 FD E1         [14]  147 	pop	iy
   0098 C5            [11]  148 	push	bc
   0099 D5            [11]  149 	push	de
   009A 21 08 00      [10]  150 	ld	hl, #0x0008
   009D E5            [11]  151 	push	hl
   009E FD E5         [15]  152 	push	iy
   00A0 CDr00r00      [17]  153 	call	__modsint
   00A3 F1            [10]  154 	pop	af
   00A4 F1            [10]  155 	pop	af
   00A5 D1            [10]  156 	pop	de
   00A6 C1            [10]  157 	pop	bc
   00A7 E5            [11]  158 	push	hl
   00A8 DD 6E FC      [19]  159 	ld	l, -4 (ix)
   00AB DD 66 FD      [19]  160 	ld	h, -3 (ix)
   00AE E5            [11]  161 	push	hl
   00AF FD E1         [14]  162 	pop	iy
   00B1 E1            [10]  163 	pop	hl
   00B2 C5            [11]  164 	push	bc
   00B3 4D            [ 4]  165 	ld	c, l
   00B4 44            [ 4]  166 	ld	b, h
   00B5 FD 09         [15]  167 	add	iy, bc
   00B7 C1            [10]  168 	pop	bc
   00B8 FD 29         [15]  169 	add	iy, iy
   00BA C5            [11]  170 	push	bc
   00BB DD 4E 05      [19]  171 	ld	c,5 (ix)
   00BE DD 46 06      [19]  172 	ld	b,6 (ix)
   00C1 FD 09         [15]  173 	add	iy, bc
   00C3 C1            [10]  174 	pop	bc
   00C4 C5            [11]  175 	push	bc
   00C5 48            [ 4]  176 	ld	c,b
   00C6 06 00         [ 7]  177 	ld	b,#0x00
   00C8 FD 09         [15]  178 	add	iy, bc
   00CA C1            [10]  179 	pop	bc
                            180 ;src/txt_scroll_hard.c:41: if (cur_plot<0x4000) {
   00CB E1            [10]  181 	pop	hl
   00CC E5            [11]  182 	push	hl
   00CD 7C            [ 4]  183 	ld	a, h
   00CE D6 40         [ 7]  184 	sub	a, #0x40
   00D0 30 10         [12]  185 	jr	NC,00102$
                            186 ;src/txt_scroll_hard.c:42: cur_plot=cur_plot-0x4000;
   00D2 DD 7E FA      [19]  187 	ld	a, -6 (ix)
   00D5 C6 00         [ 7]  188 	add	a, #0x00
   00D7 DD 77 FA      [19]  189 	ld	-6 (ix), a
   00DA DD 7E FB      [19]  190 	ld	a, -5 (ix)
   00DD CE C0         [ 7]  191 	adc	a, #0xc0
   00DF DD 77 FB      [19]  192 	ld	-5 (ix), a
   00E2                     193 00102$:
                            194 ;src/txt_scroll_hard.c:44: *cur_plot=*cur_image;
   00E2 FD 7E 00      [19]  195 	ld	a, 0 (iy)
   00E5 E1            [10]  196 	pop	hl
   00E6 E5            [11]  197 	push	hl
   00E7 77            [ 7]  198 	ld	(hl), a
                            199 ;src/txt_scroll_hard.c:38: for (x=0;x<2;x++) {
   00E8 04            [ 4]  200 	inc	b
   00E9 78            [ 4]  201 	ld	a, b
   00EA D6 02         [ 7]  202 	sub	a, #0x02
   00EC DAr5Dr00      [10]  203 	jp	C, 00108$
                            204 ;src/txt_scroll_hard.c:37: for (y=0;y<8;y++) {
   00EF 0C            [ 4]  205 	inc	c
   00F0 79            [ 4]  206 	ld	a, c
   00F1 D6 08         [ 7]  207 	sub	a, #0x08
   00F3 DAr5Br00      [10]  208 	jp	C, 00116$
   00F6 18 31         [12]  209 	jr	00112$
   00F8                     210 00106$:
                            211 ;src/txt_scroll_hard.c:48: p = cpct_getScreenPtr(plot+0x4000, 0,8*c);
   00F8 DD 7E 04      [19]  212 	ld	a, 4 (ix)
   00FB 07            [ 4]  213 	rlca
   00FC 07            [ 4]  214 	rlca
   00FD 07            [ 4]  215 	rlca
   00FE E6 F8         [ 7]  216 	and	a, #0xf8
   0100 D5            [11]  217 	push	de
   0101 F5            [11]  218 	push	af
   0102 33            [ 6]  219 	inc	sp
   0103 AF            [ 4]  220 	xor	a, a
   0104 F5            [11]  221 	push	af
   0105 33            [ 6]  222 	inc	sp
   0106 C5            [11]  223 	push	bc
   0107 CDr00r00      [17]  224 	call	_cpct_getScreenPtr
   010A D1            [10]  225 	pop	de
                            226 ;src/txt_scroll_hard.c:49: cpct_drawTileAligned2x8_f((u8*)image+(2*8)*c, p);
   010B 4D            [ 4]  227 	ld	c, l
   010C 44            [ 4]  228 	ld	b, h
   010D CB 23         [ 8]  229 	sla	e
   010F CB 12         [ 8]  230 	rl	d
   0111 CB 23         [ 8]  231 	sla	e
   0113 CB 12         [ 8]  232 	rl	d
   0115 CB 23         [ 8]  233 	sla	e
   0117 CB 12         [ 8]  234 	rl	d
   0119 CB 23         [ 8]  235 	sla	e
   011B CB 12         [ 8]  236 	rl	d
   011D DD 6E 05      [19]  237 	ld	l,5 (ix)
   0120 DD 66 06      [19]  238 	ld	h,6 (ix)
   0123 19            [11]  239 	add	hl, de
   0124 C5            [11]  240 	push	bc
   0125 E5            [11]  241 	push	hl
   0126 CDr00r00      [17]  242 	call	_cpct_drawTileAligned2x8_f
   0129                     243 00112$:
   0129 DD F9         [10]  244 	ld	sp, ix
   012B DD E1         [14]  245 	pop	ix
   012D C9            [10]  246 	ret
                            247 ;src/txt_scroll_hard.c:97: void scroll_hard(u16 step, u8* screen_plot_address) {
                            248 ;	---------------------------------
                            249 ; Function scroll_hard
                            250 ; ---------------------------------
   012E                     251 _scroll_hard::
   012E DD E5         [15]  252 	push	ix
   0130 DD 21 00 00   [14]  253 	ld	ix,#0
   0134 DD 39         [15]  254 	add	ix,sp
   0136 F5            [11]  255 	push	af
                            256 ;src/txt_scroll_hard.c:103: u8* plot=screen_plot_address;
   0137 DD 4E 06      [19]  257 	ld	c,6 (ix)
   013A DD 46 07      [19]  258 	ld	b,7 (ix)
                            259 ;src/txt_scroll_hard.c:106: div=step/8;
   013D DD 5E 04      [19]  260 	ld	e,4 (ix)
   0140 DD 56 05      [19]  261 	ld	d,5 (ix)
   0143 CB 3A         [ 8]  262 	srl	d
   0145 CB 1B         [ 8]  263 	rr	e
   0147 CB 3A         [ 8]  264 	srl	d
   0149 CB 1B         [ 8]  265 	rr	e
   014B CB 3A         [ 8]  266 	srl	d
   014D CB 1B         [ 8]  267 	rr	e
                            268 ;src/txt_scroll_hard.c:107: mod=step%8;
   014F DD 7E 04      [19]  269 	ld	a, 4 (ix)
   0152 E6 07         [ 7]  270 	and	a, #0x07
   0154 DD 77 FE      [19]  271 	ld	-2 (ix), a
   0157 DD 36 FF 00   [19]  272 	ld	-1 (ix), #0x00
                            273 ;src/txt_scroll_hard.c:108: div=div%128;
   015B CB BB         [ 8]  274 	res	7, e
   015D 16 00         [ 7]  275 	ld	d, #0x00
                            276 ;src/txt_scroll_hard.c:109: if (texte[div]==' ') {
   015F 21rC7r01      [10]  277 	ld	hl, #_texte+0
   0162 19            [11]  278 	add	hl, de
   0163 5E            [ 7]  279 	ld	e, (hl)
   0164 7B            [ 4]  280 	ld	a, e
   0165 D6 20         [ 7]  281 	sub	a, #0x20
   0167 20 05         [12]  282 	jr	NZ,00102$
                            283 ;src/txt_scroll_hard.c:110: o=0;
   0169 11 00 00      [10]  284 	ld	de, #0x0000
   016C 18 09         [12]  285 	jr	00103$
   016E                     286 00102$:
                            287 ;src/txt_scroll_hard.c:112: o=texte[div]-'?';
   016E 16 00         [ 7]  288 	ld	d, #0x00
   0170 7B            [ 4]  289 	ld	a, e
   0171 C6 C1         [ 7]  290 	add	a, #0xc1
   0173 5F            [ 4]  291 	ld	e, a
   0174 7A            [ 4]  292 	ld	a, d
   0175 CE FF         [ 7]  293 	adc	a, #0xff
   0177                     294 00103$:
                            295 ;src/txt_scroll_hard.c:115: pointeur=(u16)g_tile_fontmap32x32plat_000+o*8*(32*2)+mod*(32*2);
   0177 21r00r00      [10]  296 	ld	hl, #_g_tile_fontmap32x32plat_000
   017A 7B            [ 4]  297 	ld	a, e
   017B 87            [ 4]  298 	add	a, a
   017C 57            [ 4]  299 	ld	d, a
   017D 1E 00         [ 7]  300 	ld	e, #0x00
   017F 19            [11]  301 	add	hl,de
   0180 EB            [ 4]  302 	ex	de,hl
   0181 E1            [10]  303 	pop	hl
   0182 E5            [11]  304 	push	hl
   0183 29            [11]  305 	add	hl, hl
   0184 29            [11]  306 	add	hl, hl
   0185 29            [11]  307 	add	hl, hl
   0186 29            [11]  308 	add	hl, hl
   0187 29            [11]  309 	add	hl, hl
   0188 29            [11]  310 	add	hl, hl
   0189 19            [11]  311 	add	hl, de
                            312 ;src/txt_scroll_hard.c:119: draw_char(0,(u8*)pointeur, plot);
   018A E5            [11]  313 	push	hl
   018B C5            [11]  314 	push	bc
   018C C5            [11]  315 	push	bc
   018D E5            [11]  316 	push	hl
   018E AF            [ 4]  317 	xor	a, a
   018F F5            [11]  318 	push	af
   0190 33            [ 6]  319 	inc	sp
   0191 CDr00r00      [17]  320 	call	_draw_char
   0194 F1            [10]  321 	pop	af
   0195 F1            [10]  322 	pop	af
   0196 33            [ 6]  323 	inc	sp
   0197 C1            [10]  324 	pop	bc
   0198 E1            [10]  325 	pop	hl
                            326 ;src/txt_scroll_hard.c:120: draw_char(1,(u8*)pointeur, plot);
   0199 E5            [11]  327 	push	hl
   019A C5            [11]  328 	push	bc
   019B C5            [11]  329 	push	bc
   019C E5            [11]  330 	push	hl
   019D 3E 01         [ 7]  331 	ld	a, #0x01
   019F F5            [11]  332 	push	af
   01A0 33            [ 6]  333 	inc	sp
   01A1 CDr00r00      [17]  334 	call	_draw_char
   01A4 F1            [10]  335 	pop	af
   01A5 F1            [10]  336 	pop	af
   01A6 33            [ 6]  337 	inc	sp
   01A7 C1            [10]  338 	pop	bc
   01A8 E1            [10]  339 	pop	hl
                            340 ;src/txt_scroll_hard.c:121: draw_char(2,(u8*)pointeur, plot);
   01A9 E5            [11]  341 	push	hl
   01AA C5            [11]  342 	push	bc
   01AB C5            [11]  343 	push	bc
   01AC E5            [11]  344 	push	hl
   01AD 3E 02         [ 7]  345 	ld	a, #0x02
   01AF F5            [11]  346 	push	af
   01B0 33            [ 6]  347 	inc	sp
   01B1 CDr00r00      [17]  348 	call	_draw_char
   01B4 F1            [10]  349 	pop	af
   01B5 F1            [10]  350 	pop	af
   01B6 33            [ 6]  351 	inc	sp
   01B7 C1            [10]  352 	pop	bc
   01B8 E1            [10]  353 	pop	hl
                            354 ;src/txt_scroll_hard.c:122: draw_char(3,(u8*)pointeur, plot);
   01B9 C5            [11]  355 	push	bc
   01BA E5            [11]  356 	push	hl
   01BB 3E 03         [ 7]  357 	ld	a, #0x03
   01BD F5            [11]  358 	push	af
   01BE 33            [ 6]  359 	inc	sp
   01BF CDr00r00      [17]  360 	call	_draw_char
   01C2 DD F9         [10]  361 	ld	sp,ix
   01C4 DD E1         [14]  362 	pop	ix
   01C6 C9            [10]  363 	ret
   01C7                     364 _texte:
   01C7 57 45 20 57 49 53   365 	.ascii "WE WISH YOU A MERRY CHRISTMAS WE WISH YOU A MERRY CHRISTMAS "
        48 20 59 4F 55 20
        41 20 4D 45 52 52
        59 20 43 48 52 49
        53 54 4D 41 53 20
        57 45 20 57 49 53
        48 20 59 4F 55 20
        41 20 4D 45 52 52
        59 20 43 48 52 49
        53 54 4D 41 53 20
   0203 41 4E 44 20 41 20   366 	.ascii "AND A HAPPY NEW YEAR FROM THSF AND TETALAB      AZERTYUIOPQS"
        48 41 50 50 59 20
        4E 45 57 20 59 45
        41 52 20 46 52 4F
        4D 20 54 48 53 46
        20 41 4E 44 20 54
        45 54 41 4C 41 42
        20 20 20 20 20 20
        41 5A 45 52 54 59
        55 49 4F 50 51 53
   023F 44 46 47 20 20 20   367 	.ascii "DFG     "
        20 20
   0247 00                  368 	.db 0x00
   0248 00                  369 	.db 0x00
                            370 	.area _CODE
                            371 	.area _INITIALIZER
                            372 	.area _CABS (ABS)
