                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.8 #9946 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module audio
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _akp_musicPlay
                             12 	.globl _akp_musicInit
                             13 	.globl _i
                             14 	.globl _effets
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 ;--------------------------------------------------------
                             19 ; ram data
                             20 ;--------------------------------------------------------
                             21 	.area _DATA
   0000                      22 _i::
   0000                      23 	.ds 2
                             24 ;--------------------------------------------------------
                             25 ; ram data
                             26 ;--------------------------------------------------------
                             27 	.area _INITIALIZED
                             28 ;--------------------------------------------------------
                             29 ; absolute external ram data
                             30 ;--------------------------------------------------------
                             31 	.area _DABS (ABS)
                             32 ;--------------------------------------------------------
                             33 ; global & static initialisations
                             34 ;--------------------------------------------------------
                             35 	.area _HOME
                             36 	.area _GSINIT
                             37 	.area _GSFINAL
                             38 	.area _GSINIT
                             39 ;--------------------------------------------------------
                             40 ; Home
                             41 ;--------------------------------------------------------
                             42 	.area _HOME
                             43 	.area _HOME
                             44 ;--------------------------------------------------------
                             45 ; code
                             46 ;--------------------------------------------------------
                             47 	.area _CODE
                             48 ;src/audio.c:40: void akp_musicInit()
                             49 ;	---------------------------------
                             50 ; Function akp_musicInit
                             51 ; ---------------------------------
   0000                      52 _akp_musicInit::
                             53 ;src/audio.c:42: i=i+1;
   0000 FD 21r00r00   [14]   54 	ld	iy, #_i
   0004 FD 34 00      [23]   55 	inc	0 (iy)
   0007 20 03         [12]   56 	jr	NZ,00103$
   0009 FD 34 01      [23]   57 	inc	1 (iy)
   000C                      58 00103$:
                             59 ;src/audio.c:102: __endasm;
                             60 ;;	backup Z80 state
   000C F5            [11]   61 	push	af
   000D C5            [11]   62 	push	bc
   000E D5            [11]   63 	push	de
   000F E5            [11]   64 	push	hl
   0010 DD E5         [15]   65 	push	ix
   0012 FD E5         [15]   66 	push	iy
   0014 D9            [ 4]   67 	exx
   0015 08            [ 4]   68 	ex	af, af' ;; '
   0016 F5            [11]   69 	push	af
   0017 C5            [11]   70 	push	bc
   0018 D5            [11]   71 	push	de
   0019 E5            [11]   72 	push	hl
   001A 01r47r00      [10]   73 	ld	bc,#_effets ;; OK
   001D 21r47r00      [10]   74 	ld	hl,#_effets ;; OK
   0020 ED 43r47r00   [20]   75 	ld	(#_effets),bc ;; OK
   0024 03            [ 6]   76 	inc	bc
   0025 03            [ 6]   77 	inc	bc
   0026 11 40 00      [10]   78 	ld	de,#0x0040
   0029 19            [11]   79 	add	hl,de
   002A 7C            [ 4]   80 	ld	a,h
   002B 02            [ 7]   81 	ld	(bc),a
   002C 03            [ 6]   82 	inc	bc
   002D 7D            [ 4]   83 	ld	a,l
   002E 02            [ 7]   84 	ld	(bc),a
                             85 ;;	AKG6000.BIN/exemple.asm
   002F 01 00 70      [10]   86 	ld	bc,#0x7000
   0032 11r47r00      [10]   87 	ld	de,#_effets ;;sfx
   0035 CD 00 60      [17]   88 	call	#0x6000
                             89 ;;	restore Z80 state
   0038 E1            [10]   90 	pop	hl
   0039 D1            [10]   91 	pop	de
   003A C1            [10]   92 	pop	bc
   003B F1            [10]   93 	pop	af
   003C 08            [ 4]   94 	ex	af, af' ;; '
   003D D9            [ 4]   95 	exx
   003E FD E1         [14]   96 	pop	iy
   0040 DD E1         [14]   97 	pop	ix
   0042 E1            [10]   98 	pop	hl
   0043 D1            [10]   99 	pop	de
   0044 C1            [10]  100 	pop	bc
   0045 F1            [10]  101 	pop	af
   0046 C9            [10]  102 	ret
   0047                     103 _effets:
   0047 00 00               104 	.dw #0x0000
   0049 00 00               105 	.dw #0x0000
   004B 00                  106 	.db #0x00	; 0
   004C 3D                  107 	.db #0x3d	; 61
   004D EF 00               108 	.dw #0x00ef
   004F 39                  109 	.db #0x39	; 57	'9'
   0050 EF 00               110 	.dw #0x00ef
   0052 35                  111 	.db #0x35	; 53	'5'
   0053 EF 00               112 	.dw #0x00ef
   0055 04                  113 	.db #0x04	; 4
   0056 00                  114 	.db #0x00	; 0
   0057 BD                  115 	.db #0xbd	; 189
   0058 01                  116 	.db #0x01	; 1
   0059 5F 00               117 	.dw #0x005f
   005B BD                  118 	.db #0xbd	; 189
   005C 01                  119 	.db #0x01	; 1
   005D 63 00               120 	.dw #0x0063
   005F B1                  121 	.db #0xb1	; 177
   0060 01                  122 	.db #0x01	; 1
   0061 66 00               123 	.dw #0x0066
   0063 04                  124 	.db #0x04	; 4
   0064 00                  125 	.db #0x00	; 0
   0065 3D                  126 	.db #0x3d	; 61
   0066 EF 00               127 	.dw #0x00ef
   0068 39                  128 	.db #0x39	; 57	'9'
   0069 EF 00               129 	.dw #0x00ef
   006B 35                  130 	.db #0x35	; 53	'5'
   006C EF 00               131 	.dw #0x00ef
   006E 04                  132 	.db #0x04	; 4
   006F 01                  133 	.db #0x01	; 1
   0070 BD                  134 	.db #0xbd	; 189
   0071 01                  135 	.db #0x01	; 1
   0072 2D 01               136 	.dw #0x012d
   0074 BD                  137 	.db #0xbd	; 189
   0075 08                  138 	.db #0x08	; 8
   0076 3F 01               139 	.dw #0x013f
   0078 B9                  140 	.db #0xb9	; 185
   0079 02                  141 	.db #0x02	; 2
   007A 92 01               142 	.dw #0x0192
   007C 04                  143 	.db #0x04	; 4
                            144 ;src/audio.c:105: void akp_musicPlay()
                            145 ;	---------------------------------
                            146 ; Function akp_musicPlay
                            147 ; ---------------------------------
   007D                     148 _akp_musicPlay::
                            149 ;src/audio.c:138: __endasm;
                            150 ;;	backup Z80 state
   007D F5            [11]  151 	push	af
   007E C5            [11]  152 	push	bc
   007F D5            [11]  153 	push	de
   0080 E5            [11]  154 	push	hl
   0081 DD E5         [15]  155 	push	ix
   0083 FD E5         [15]  156 	push	iy
   0085 D9            [ 4]  157 	exx
   0086 08            [ 4]  158 	ex	af, af' ;; '
   0087 F5            [11]  159 	push	af
   0088 C5            [11]  160 	push	bc
   0089 D5            [11]  161 	push	de
   008A E5            [11]  162 	push	hl
                            163 ;;	AKG6000.BIN/exemple.asm
   008B CD 03 60      [17]  164 	call	#0x6003
                            165 ;;	restore Z80 state
   008E E1            [10]  166 	pop	hl
   008F D1            [10]  167 	pop	de
   0090 C1            [10]  168 	pop	bc
   0091 F1            [10]  169 	pop	af
   0092 08            [ 4]  170 	ex	af, af' ;; '
   0093 D9            [ 4]  171 	exx
   0094 FD E1         [14]  172 	pop	iy
   0096 DD E1         [14]  173 	pop	ix
   0098 E1            [10]  174 	pop	hl
   0099 D1            [10]  175 	pop	de
   009A C1            [10]  176 	pop	bc
   009B F1            [10]  177 	pop	af
   009C C9            [10]  178 	ret
                            179 	.area _CODE
                            180 	.area _INITIALIZER
                            181 	.area _CABS (ABS)
