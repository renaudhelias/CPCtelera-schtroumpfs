                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.8 #9946 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module txt_scroll_hard
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _scroll_hard
                             12 	.globl _draw_char
                             13 	.globl _cpct_getScreenPtr
                             14 	.globl _cpct_drawSolidBox
                             15 	.globl _cpct_drawTileAligned2x8_f
                             16 	.globl _firstPlotScreen2
                             17 	.globl _c_screen3
                             18 	.globl _plot_screen2
                             19 	.globl _texte
                             20 ;--------------------------------------------------------
                             21 ; special function registers
                             22 ;--------------------------------------------------------
                             23 ;--------------------------------------------------------
                             24 ; ram data
                             25 ;--------------------------------------------------------
                             26 	.area _DATA
   0000                      27 _plot_screen2::
   0000                      28 	.ds 2
   0002                      29 _c_screen3::
   0002                      30 	.ds 1
                             31 ;--------------------------------------------------------
                             32 ; ram data
                             33 ;--------------------------------------------------------
                             34 	.area _INITIALIZED
   0000                      35 _firstPlotScreen2::
   0000                      36 	.ds 1
                             37 ;--------------------------------------------------------
                             38 ; absolute external ram data
                             39 ;--------------------------------------------------------
                             40 	.area _DABS (ABS)
                             41 ;--------------------------------------------------------
                             42 ; global & static initialisations
                             43 ;--------------------------------------------------------
                             44 	.area _HOME
                             45 	.area _GSINIT
                             46 	.area _GSFINAL
                             47 	.area _GSINIT
                             48 ;--------------------------------------------------------
                             49 ; Home
                             50 ;--------------------------------------------------------
                             51 	.area _HOME
                             52 	.area _HOME
                             53 ;--------------------------------------------------------
                             54 ; code
                             55 ;--------------------------------------------------------
                             56 	.area _CODE
                             57 ;src/txt_scroll_hard.c:16: u8 draw_char(u8 c, u8 ce2, u8* image, u8* plot) {
                             58 ;	---------------------------------
                             59 ; Function draw_char
                             60 ; ---------------------------------
   0000                      61 _draw_char::
   0000 DD E5         [15]   62 	push	ix
   0002 DD 21 00 00   [14]   63 	ld	ix,#0
   0006 DD 39         [15]   64 	add	ix,sp
   0008 F5            [11]   65 	push	af
                             66 ;src/txt_scroll_hard.c:24: u8 c_screen2=ce2;
   0009 DD 4E 05      [19]   67 	ld	c, 5 (ix)
                             68 ;src/txt_scroll_hard.c:25: last_plot=plot+ 0x4000 +80u*c+ 0x3801;
   000C DD 5E 04      [19]   69 	ld	e, 4 (ix)
   000F 16 00         [ 7]   70 	ld	d, #0x00
   0011 6B            [ 4]   71 	ld	l, e
   0012 62            [ 4]   72 	ld	h, d
   0013 29            [11]   73 	add	hl, hl
   0014 29            [11]   74 	add	hl, hl
   0015 19            [11]   75 	add	hl, de
   0016 29            [11]   76 	add	hl, hl
   0017 29            [11]   77 	add	hl, hl
   0018 29            [11]   78 	add	hl, hl
   0019 29            [11]   79 	add	hl, hl
   001A EB            [ 4]   80 	ex	de,hl
   001B 21 01 78      [10]   81 	ld	hl, #0x7801
   001E 19            [11]   82 	add	hl,de
   001F EB            [ 4]   83 	ex	de,hl
   0020 DD 6E 08      [19]   84 	ld	l,8 (ix)
   0023 DD 66 09      [19]   85 	ld	h,9 (ix)
   0026 19            [11]   86 	add	hl, de
                             87 ;src/txt_scroll_hard.c:27: if (last_plot<0x4000) {
   0027 33            [ 6]   88 	inc	sp
   0028 33            [ 6]   89 	inc	sp
   0029 E5            [11]   90 	push	hl
                             91 ;src/txt_scroll_hard.c:53: cpct_drawTileAligned2x8_f((u8*)image+(2*8)*c, p);
   002A DD 6E 04      [19]   92 	ld	l, 4 (ix)
   002D 26 00         [ 7]   93 	ld	h, #0x00
   002F 29            [11]   94 	add	hl, hl
   0030 29            [11]   95 	add	hl, hl
   0031 29            [11]   96 	add	hl, hl
   0032 29            [11]   97 	add	hl, hl
   0033 EB            [ 4]   98 	ex	de,hl
   0034 DD 6E 06      [19]   99 	ld	l,6 (ix)
   0037 DD 66 07      [19]  100 	ld	h,7 (ix)
   003A 19            [11]  101 	add	hl, de
   003B EB            [ 4]  102 	ex	de,hl
                            103 ;src/txt_scroll_hard.c:27: if (last_plot<0x4000) {
   003C DD 7E FF      [19]  104 	ld	a, -1 (ix)
   003F D6 40         [ 7]  105 	sub	a, #0x40
   0041 D2rF3r00      [10]  106 	jp	NC, 00118$
                            107 ;src/txt_scroll_hard.c:29: c_screen3=c;
   0044 DD 46 04      [19]  108 	ld	b, 4 (ix)
                            109 ;src/txt_scroll_hard.c:28: if (c<c_screen3) {
   0047 21r02r00      [10]  110 	ld	hl, #_c_screen3
   004A DD 7E 04      [19]  111 	ld	a, 4 (ix)
   004D 96            [ 7]  112 	sub	a, (hl)
   004E 30 0A         [12]  113 	jr	NC,00102$
                            114 ;src/txt_scroll_hard.c:29: c_screen3=c;
   0050 21r02r00      [10]  115 	ld	hl,#_c_screen3 + 0
   0053 70            [ 7]  116 	ld	(hl), b
                            117 ;src/txt_scroll_hard.c:30: plot_screen2=0x8000;
   0054 21 00 80      [10]  118 	ld	hl, #0x8000
   0057 22r00r00      [16]  119 	ld	(_plot_screen2), hl
   005A                     120 00102$:
                            121 ;src/txt_scroll_hard.c:32: if (c<c_screen2) {
   005A DD 7E 04      [19]  122 	ld	a, 4 (ix)
   005D 91            [ 4]  123 	sub	a, c
   005E 30 01         [12]  124 	jr	NC,00104$
                            125 ;src/txt_scroll_hard.c:33: c_screen2=c;
   0060 48            [ 4]  126 	ld	c, b
   0061                     127 00104$:
                            128 ;src/txt_scroll_hard.c:51: p = cpct_getScreenPtr(plot_screen2+0x4000, 0,8*(c-c_screen2));
   0061 DD 7E 04      [19]  129 	ld	a, 4 (ix)
   0064 91            [ 4]  130 	sub	a, c
   0065 07            [ 4]  131 	rlca
   0066 07            [ 4]  132 	rlca
   0067 07            [ 4]  133 	rlca
   0068 E6 F8         [ 7]  134 	and	a, #0xf8
   006A 47            [ 4]  135 	ld	b, a
   006B FD 21 00 40   [14]  136 	ld	iy, #0x4000
   006F C5            [11]  137 	push	bc
   0070 ED 4Br00r00   [20]  138 	ld	bc, (_plot_screen2)
   0074 FD 09         [15]  139 	add	iy, bc
   0076 C1            [10]  140 	pop	bc
   0077 C5            [11]  141 	push	bc
   0078 D5            [11]  142 	push	de
   0079 C5            [11]  143 	push	bc
   007A 33            [ 6]  144 	inc	sp
   007B AF            [ 4]  145 	xor	a, a
   007C F5            [11]  146 	push	af
   007D 33            [ 6]  147 	inc	sp
   007E FD E5         [15]  148 	push	iy
   0080 CDr00r00      [17]  149 	call	_cpct_getScreenPtr
   0083 D1            [10]  150 	pop	de
   0084 C1            [10]  151 	pop	bc
                            152 ;src/txt_scroll_hard.c:52: if (c_screen2==3 && c==3) {
   0085 DD 7E 04      [19]  153 	ld	a, 4 (ix)
   0088 D6 03         [ 7]  154 	sub	a, #0x03
   008A 20 04         [12]  155 	jr	NZ,00158$
   008C 3E 01         [ 7]  156 	ld	a,#0x01
   008E 18 01         [12]  157 	jr	00159$
   0090                     158 00158$:
   0090 AF            [ 4]  159 	xor	a,a
   0091                     160 00159$:
   0091 47            [ 4]  161 	ld	b, a
                            162 ;src/txt_scroll_hard.c:53: cpct_drawTileAligned2x8_f((u8*)image+(2*8)*c, p);
                            163 ;src/txt_scroll_hard.c:52: if (c_screen2==3 && c==3) {
   0092 79            [ 4]  164 	ld	a, c
   0093 D6 03         [ 7]  165 	sub	a,#0x03
   0095 20 0D         [12]  166 	jr	NZ,00114$
   0097 B0            [ 4]  167 	or	a,b
   0098 28 0A         [12]  168 	jr	Z,00114$
                            169 ;src/txt_scroll_hard.c:53: cpct_drawTileAligned2x8_f((u8*)image+(2*8)*c, p);
   009A C5            [11]  170 	push	bc
   009B E5            [11]  171 	push	hl
   009C D5            [11]  172 	push	de
   009D CDr00r00      [17]  173 	call	_cpct_drawTileAligned2x8_f
   00A0 C1            [10]  174 	pop	bc
   00A1 C3r1Br01      [10]  175 	jp	00119$
   00A4                     176 00114$:
                            177 ;src/txt_scroll_hard.c:54: } else if (c_screen2==2 && c==2) { // le "suivant" en bas, donc 0 1
   00A4 79            [ 4]  178 	ld	a, c
   00A5 D6 02         [ 7]  179 	sub	a, #0x02
   00A7 20 04         [12]  180 	jr	NZ,00162$
   00A9 3E 01         [ 7]  181 	ld	a,#0x01
   00AB 18 01         [12]  182 	jr	00163$
   00AD                     183 00162$:
   00AD AF            [ 4]  184 	xor	a,a
   00AE                     185 00163$:
   00AE DD 77 FE      [19]  186 	ld	-2 (ix), a
   00B1 B7            [ 4]  187 	or	a, a
   00B2 28 1A         [12]  188 	jr	Z,00110$
   00B4 DD 7E 04      [19]  189 	ld	a, 4 (ix)
   00B7 D6 02         [ 7]  190 	sub	a, #0x02
   00B9 20 13         [12]  191 	jr	NZ,00110$
                            192 ;src/txt_scroll_hard.c:56: cpct_drawSolidBox(p,0xFF,2,8);
   00BB C5            [11]  193 	push	bc
   00BC 11 02 08      [10]  194 	ld	de, #0x0802
   00BF D5            [11]  195 	push	de
   00C0 3E FF         [ 7]  196 	ld	a, #0xff
   00C2 F5            [11]  197 	push	af
   00C3 33            [ 6]  198 	inc	sp
   00C4 E5            [11]  199 	push	hl
   00C5 CDr00r00      [17]  200 	call	_cpct_drawSolidBox
   00C8 F1            [10]  201 	pop	af
   00C9 F1            [10]  202 	pop	af
   00CA 33            [ 6]  203 	inc	sp
   00CB C1            [10]  204 	pop	bc
   00CC 18 4D         [12]  205 	jr	00119$
   00CE                     206 00110$:
                            207 ;src/txt_scroll_hard.c:57: } else if (c_screen2==2 && c==3) { // le "suivant" en bas, donc 0 1
   00CE DD 7E FE      [19]  208 	ld	a, -2 (ix)
   00D1 B7            [ 4]  209 	or	a, a
   00D2 28 0D         [12]  210 	jr	Z,00106$
   00D4 78            [ 4]  211 	ld	a, b
   00D5 B7            [ 4]  212 	or	a, a
   00D6 28 09         [12]  213 	jr	Z,00106$
                            214 ;src/txt_scroll_hard.c:60: cpct_drawTileAligned2x8_f((u8*)image+(2*8)*c, p);
   00D8 C5            [11]  215 	push	bc
   00D9 E5            [11]  216 	push	hl
   00DA D5            [11]  217 	push	de
   00DB CDr00r00      [17]  218 	call	_cpct_drawTileAligned2x8_f
   00DE C1            [10]  219 	pop	bc
   00DF 18 3A         [12]  220 	jr	00119$
   00E1                     221 00106$:
                            222 ;src/txt_scroll_hard.c:62: cpct_drawSolidBox(p,c_screen2,2,8);
   00E1 C5            [11]  223 	push	bc
   00E2 11 02 08      [10]  224 	ld	de, #0x0802
   00E5 D5            [11]  225 	push	de
   00E6 79            [ 4]  226 	ld	a, c
   00E7 F5            [11]  227 	push	af
   00E8 33            [ 6]  228 	inc	sp
   00E9 E5            [11]  229 	push	hl
   00EA CDr00r00      [17]  230 	call	_cpct_drawSolidBox
   00ED F1            [10]  231 	pop	af
   00EE F1            [10]  232 	pop	af
   00EF 33            [ 6]  233 	inc	sp
   00F0 C1            [10]  234 	pop	bc
   00F1 18 28         [12]  235 	jr	00119$
   00F3                     236 00118$:
                            237 ;src/txt_scroll_hard.c:84: p = cpct_getScreenPtr(plot+0x4000, 0,8*c);
   00F3 DD 7E 04      [19]  238 	ld	a, 4 (ix)
   00F6 07            [ 4]  239 	rlca
   00F7 07            [ 4]  240 	rlca
   00F8 07            [ 4]  241 	rlca
   00F9 E6 F8         [ 7]  242 	and	a, #0xf8
   00FB 67            [ 4]  243 	ld	h, a
   00FC DD 7E 08      [19]  244 	ld	a, 8 (ix)
   00FF C6 00         [ 7]  245 	add	a, #0x00
   0101 6F            [ 4]  246 	ld	l, a
   0102 DD 7E 09      [19]  247 	ld	a, 9 (ix)
   0105 CE 40         [ 7]  248 	adc	a, #0x40
   0107 47            [ 4]  249 	ld	b, a
   0108 C5            [11]  250 	push	bc
   0109 D5            [11]  251 	push	de
   010A E5            [11]  252 	push	hl
   010B 33            [ 6]  253 	inc	sp
   010C AF            [ 4]  254 	xor	a, a
   010D F5            [11]  255 	push	af
   010E 33            [ 6]  256 	inc	sp
   010F 60            [ 4]  257 	ld	h, b
   0110 E5            [11]  258 	push	hl
   0111 CDr00r00      [17]  259 	call	_cpct_getScreenPtr
   0114 D1            [10]  260 	pop	de
   0115 E5            [11]  261 	push	hl
   0116 D5            [11]  262 	push	de
   0117 CDr00r00      [17]  263 	call	_cpct_drawTileAligned2x8_f
   011A C1            [10]  264 	pop	bc
   011B                     265 00119$:
                            266 ;src/txt_scroll_hard.c:87: return c_screen2;
   011B 69            [ 4]  267 	ld	l, c
   011C DD F9         [10]  268 	ld	sp, ix
   011E DD E1         [14]  269 	pop	ix
   0120 C9            [10]  270 	ret
                            271 ;src/txt_scroll_hard.c:98: void scroll_hard(u16 step, u8* screen_plot_address) {
                            272 ;	---------------------------------
                            273 ; Function scroll_hard
                            274 ; ---------------------------------
   0121                     275 _scroll_hard::
   0121 DD E5         [15]  276 	push	ix
   0123 DD 21 00 00   [14]  277 	ld	ix,#0
   0127 DD 39         [15]  278 	add	ix,sp
   0129 F5            [11]  279 	push	af
                            280 ;src/txt_scroll_hard.c:105: u8* plot=screen_plot_address;
   012A DD 4E 06      [19]  281 	ld	c,6 (ix)
   012D DD 46 07      [19]  282 	ld	b,7 (ix)
                            283 ;src/txt_scroll_hard.c:109: div=step/8;
   0130 DD 5E 04      [19]  284 	ld	e,4 (ix)
   0133 DD 56 05      [19]  285 	ld	d,5 (ix)
   0136 CB 3A         [ 8]  286 	srl	d
   0138 CB 1B         [ 8]  287 	rr	e
   013A CB 3A         [ 8]  288 	srl	d
   013C CB 1B         [ 8]  289 	rr	e
   013E CB 3A         [ 8]  290 	srl	d
   0140 CB 1B         [ 8]  291 	rr	e
                            292 ;src/txt_scroll_hard.c:110: mod=step%8;
   0142 DD 7E 04      [19]  293 	ld	a, 4 (ix)
   0145 E6 07         [ 7]  294 	and	a, #0x07
   0147 DD 77 FE      [19]  295 	ld	-2 (ix), a
   014A DD 36 FF 00   [19]  296 	ld	-1 (ix), #0x00
                            297 ;src/txt_scroll_hard.c:111: div=div%128;
   014E CB BB         [ 8]  298 	res	7, e
   0150 16 00         [ 7]  299 	ld	d, #0x00
                            300 ;src/txt_scroll_hard.c:112: if (texte[div]==' ') {
   0152 21rF0r01      [10]  301 	ld	hl, #_texte+0
   0155 19            [11]  302 	add	hl, de
   0156 5E            [ 7]  303 	ld	e, (hl)
   0157 7B            [ 4]  304 	ld	a, e
   0158 D6 20         [ 7]  305 	sub	a, #0x20
   015A 20 05         [12]  306 	jr	NZ,00102$
                            307 ;src/txt_scroll_hard.c:113: o=0;
   015C 11 00 00      [10]  308 	ld	de, #0x0000
   015F 18 09         [12]  309 	jr	00103$
   0161                     310 00102$:
                            311 ;src/txt_scroll_hard.c:115: o=texte[div]-'?';
   0161 16 00         [ 7]  312 	ld	d, #0x00
   0163 7B            [ 4]  313 	ld	a, e
   0164 C6 C1         [ 7]  314 	add	a, #0xc1
   0166 5F            [ 4]  315 	ld	e, a
   0167 7A            [ 4]  316 	ld	a, d
   0168 CE FF         [ 7]  317 	adc	a, #0xff
   016A                     318 00103$:
                            319 ;src/txt_scroll_hard.c:118: pointeur=(u16)g_tile_fontmap32x32plat_000+o*8*(32*2)+mod*(32*2);
   016A 21r00r00      [10]  320 	ld	hl, #_g_tile_fontmap32x32plat_000
   016D 7B            [ 4]  321 	ld	a, e
   016E 87            [ 4]  322 	add	a, a
   016F 57            [ 4]  323 	ld	d, a
   0170 1E 00         [ 7]  324 	ld	e, #0x00
   0172 19            [11]  325 	add	hl,de
   0173 EB            [ 4]  326 	ex	de,hl
   0174 E1            [10]  327 	pop	hl
   0175 E5            [11]  328 	push	hl
   0176 29            [11]  329 	add	hl, hl
   0177 29            [11]  330 	add	hl, hl
   0178 29            [11]  331 	add	hl, hl
   0179 29            [11]  332 	add	hl, hl
   017A 29            [11]  333 	add	hl, hl
   017B 29            [11]  334 	add	hl, hl
   017C 19            [11]  335 	add	hl,de
   017D EB            [ 4]  336 	ex	de,hl
                            337 ;src/txt_scroll_hard.c:122: ce2=draw_char(0,4,(u8*)pointeur, plot);
   017E C5            [11]  338 	push	bc
   017F D5            [11]  339 	push	de
   0180 C5            [11]  340 	push	bc
   0181 D5            [11]  341 	push	de
   0182 21 00 04      [10]  342 	ld	hl, #0x0400
   0185 E5            [11]  343 	push	hl
   0186 CDr00r00      [17]  344 	call	_draw_char
   0189 F1            [10]  345 	pop	af
   018A F1            [10]  346 	pop	af
   018B F1            [10]  347 	pop	af
   018C D1            [10]  348 	pop	de
   018D C1            [10]  349 	pop	bc
   018E 65            [ 4]  350 	ld	h, l
                            351 ;src/txt_scroll_hard.c:123: ce2=draw_char(1,ce2,(u8*)pointeur, plot);
   018F C5            [11]  352 	push	bc
   0190 D5            [11]  353 	push	de
   0191 C5            [11]  354 	push	bc
   0192 D5            [11]  355 	push	de
   0193 E5            [11]  356 	push	hl
   0194 33            [ 6]  357 	inc	sp
   0195 3E 01         [ 7]  358 	ld	a, #0x01
   0197 F5            [11]  359 	push	af
   0198 33            [ 6]  360 	inc	sp
   0199 CDr00r00      [17]  361 	call	_draw_char
   019C F1            [10]  362 	pop	af
   019D F1            [10]  363 	pop	af
   019E F1            [10]  364 	pop	af
   019F D1            [10]  365 	pop	de
   01A0 C1            [10]  366 	pop	bc
   01A1 65            [ 4]  367 	ld	h, l
                            368 ;src/txt_scroll_hard.c:124: ce2=draw_char(2,ce2,(u8*)pointeur, plot);
   01A2 C5            [11]  369 	push	bc
   01A3 D5            [11]  370 	push	de
   01A4 C5            [11]  371 	push	bc
   01A5 D5            [11]  372 	push	de
   01A6 E5            [11]  373 	push	hl
   01A7 33            [ 6]  374 	inc	sp
   01A8 3E 02         [ 7]  375 	ld	a, #0x02
   01AA F5            [11]  376 	push	af
   01AB 33            [ 6]  377 	inc	sp
   01AC CDr00r00      [17]  378 	call	_draw_char
   01AF F1            [10]  379 	pop	af
   01B0 F1            [10]  380 	pop	af
   01B1 F1            [10]  381 	pop	af
   01B2 D1            [10]  382 	pop	de
   01B3 C1            [10]  383 	pop	bc
   01B4 65            [ 4]  384 	ld	h, l
                            385 ;src/txt_scroll_hard.c:125: ce2=draw_char(3,ce2,(u8*)pointeur, plot);
   01B5 C5            [11]  386 	push	bc
   01B6 D5            [11]  387 	push	de
   01B7 E5            [11]  388 	push	hl
   01B8 33            [ 6]  389 	inc	sp
   01B9 3E 03         [ 7]  390 	ld	a, #0x03
   01BB F5            [11]  391 	push	af
   01BC 33            [ 6]  392 	inc	sp
   01BD CDr00r00      [17]  393 	call	_draw_char
   01C0 F1            [10]  394 	pop	af
   01C1 F1            [10]  395 	pop	af
   01C2 F1            [10]  396 	pop	af
                            397 ;src/txt_scroll_hard.c:126: if (ce2==4) {
   01C3 7D            [ 4]  398 	ld	a, l
   01C4 D6 04         [ 7]  399 	sub	a, #0x04
   01C6 20 0D         [12]  400 	jr	NZ,00105$
                            401 ;src/txt_scroll_hard.c:128: plot_screen2=0x8000;
   01C8 21 00 80      [10]  402 	ld	hl, #0x8000
   01CB 22r00r00      [16]  403 	ld	(_plot_screen2), hl
                            404 ;src/txt_scroll_hard.c:129: c_screen3=4;
   01CE 21r02r00      [10]  405 	ld	hl,#_c_screen3 + 0
   01D1 36 04         [10]  406 	ld	(hl), #0x04
   01D3 18 16         [12]  407 	jr	00107$
   01D5                     408 00105$:
                            409 ;src/txt_scroll_hard.c:131: plot_screen2+=2;
   01D5 21r00r00      [10]  410 	ld	hl, #_plot_screen2
   01D8 7E            [ 7]  411 	ld	a, (hl)
   01D9 C6 02         [ 7]  412 	add	a, #0x02
   01DB 77            [ 7]  413 	ld	(hl), a
   01DC 23            [ 6]  414 	inc	hl
   01DD 7E            [ 7]  415 	ld	a, (hl)
   01DE CE 00         [ 7]  416 	adc	a, #0x00
   01E0 77            [ 7]  417 	ld	(hl), a
                            418 ;src/txt_scroll_hard.c:132: plot_screen2=(u8 *)(((u16)plot_screen2) & 0x87FF);
   01E1 2Ar00r00      [16]  419 	ld	hl, (_plot_screen2)
   01E4 7C            [ 4]  420 	ld	a, h
   01E5 E6 87         [ 7]  421 	and	a, #0x87
   01E7 67            [ 4]  422 	ld	h, a
   01E8 22r00r00      [16]  423 	ld	(_plot_screen2), hl
   01EB                     424 00107$:
   01EB DD F9         [10]  425 	ld	sp, ix
   01ED DD E1         [14]  426 	pop	ix
   01EF C9            [10]  427 	ret
   01F0                     428 _texte:
   01F0 57 45 20 57 49 53   429 	.ascii "WE WISH YOU A MERRY CHRISTMAS WE WISH YOU A MERRY CHRISTMAS "
        48 20 59 4F 55 20
        41 20 4D 45 52 52
        59 20 43 48 52 49
        53 54 4D 41 53 20
        57 45 20 57 49 53
        48 20 59 4F 55 20
        41 20 4D 45 52 52
        59 20 43 48 52 49
        53 54 4D 41 53 20
   022C 41 4E 44 20 41 20   430 	.ascii "AND A HAPPY NEW YEAR FROM THSF AND TETALAB      AZERTYUIOPQS"
        48 41 50 50 59 20
        4E 45 57 20 59 45
        41 52 20 46 52 4F
        4D 20 54 48 53 46
        20 41 4E 44 20 54
        45 54 41 4C 41 42
        20 20 20 20 20 20
        41 5A 45 52 54 59
        55 49 4F 50 51 53
   0268 44 46 47 20 20 20   431 	.ascii "DFG     "
        20 20
   0270 00                  432 	.db 0x00
   0271 00                  433 	.db 0x00
                            434 	.area _CODE
                            435 	.area _INITIALIZER
   0000                     436 __xinit__firstPlotScreen2:
   0000 01                  437 	.db #0x01	; 1
                            438 	.area _CABS (ABS)
