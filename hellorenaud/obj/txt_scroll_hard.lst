                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.8 #9946 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module txt_scroll_hard
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _scroll_hard
                             12 	.globl _cpct_drawSprite
                             13 	.globl _texte
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _INITIALIZED
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area _DABS (ABS)
                             29 ;--------------------------------------------------------
                             30 ; global & static initialisations
                             31 ;--------------------------------------------------------
                             32 	.area _HOME
                             33 	.area _GSINIT
                             34 	.area _GSFINAL
                             35 	.area _GSINIT
                             36 ;--------------------------------------------------------
                             37 ; Home
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _HOME
                             41 ;--------------------------------------------------------
                             42 ; code
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 ;src/txt_scroll_hard.c:14: void scroll_hard(int step, u8* screen_plot_address) {
                             46 ;	---------------------------------
                             47 ; Function scroll_hard
                             48 ; ---------------------------------
   0000                      49 _scroll_hard::
   0000 DD E5         [15]   50 	push	ix
   0002 DD 21 00 00   [14]   51 	ld	ix,#0
   0006 DD 39         [15]   52 	add	ix,sp
   0008 F5            [11]   53 	push	af
                             54 ;src/txt_scroll_hard.c:20: u8* plot=screen_plot_address;
   0009 DD 7E 06      [19]   55 	ld	a, 6 (ix)
   000C DD 77 FE      [19]   56 	ld	-2 (ix), a
   000F DD 7E 07      [19]   57 	ld	a, 7 (ix)
   0012 DD 77 FF      [19]   58 	ld	-1 (ix), a
                             59 ;src/txt_scroll_hard.c:23: div=step/8;
   0015 DD 6E 04      [19]   60 	ld	l,4 (ix)
   0018 DD 66 05      [19]   61 	ld	h,5 (ix)
   001B CB 7C         [ 8]   62 	bit	7, h
   001D 28 04         [12]   63 	jr	Z,00106$
   001F 01 07 00      [10]   64 	ld	bc, #0x0007
   0022 09            [11]   65 	add	hl, bc
   0023                      66 00106$:
   0023 CB 3C         [ 8]   67 	srl	h
   0025 CB 1D         [ 8]   68 	rr	l
   0027 CB 3C         [ 8]   69 	srl	h
   0029 CB 1D         [ 8]   70 	rr	l
   002B CB 3C         [ 8]   71 	srl	h
   002D CB 1D         [ 8]   72 	rr	l
                             73 ;src/txt_scroll_hard.c:24: mod=step%8;
   002F E5            [11]   74 	push	hl
   0030 01 08 00      [10]   75 	ld	bc, #0x0008
   0033 C5            [11]   76 	push	bc
   0034 DD 4E 04      [19]   77 	ld	c,4 (ix)
   0037 DD 46 05      [19]   78 	ld	b,5 (ix)
   003A C5            [11]   79 	push	bc
   003B CDr00r00      [17]   80 	call	__modsint
   003E F1            [10]   81 	pop	af
   003F F1            [10]   82 	pop	af
   0040 4D            [ 4]   83 	ld	c, l
   0041 44            [ 4]   84 	ld	b, h
   0042 E1            [10]   85 	pop	hl
                             86 ;src/txt_scroll_hard.c:25: div=div%128;
   0043 CB BD         [ 8]   87 	res	7, l
   0045 26 00         [ 7]   88 	ld	h, #0x00
                             89 ;src/txt_scroll_hard.c:26: if (texte[div]==' ') {
   0047 11r82r00      [10]   90 	ld	de, #_texte+0
   004A 19            [11]   91 	add	hl, de
   004B 5E            [ 7]   92 	ld	e, (hl)
   004C 7B            [ 4]   93 	ld	a, e
   004D D6 20         [ 7]   94 	sub	a, #0x20
   004F 20 05         [12]   95 	jr	NZ,00102$
                             96 ;src/txt_scroll_hard.c:27: o=0;
   0051 11 00 00      [10]   97 	ld	de, #0x0000
   0054 18 09         [12]   98 	jr	00103$
   0056                      99 00102$:
                            100 ;src/txt_scroll_hard.c:29: o=texte[div]-'?';
   0056 16 00         [ 7]  101 	ld	d, #0x00
   0058 7B            [ 4]  102 	ld	a, e
   0059 C6 C1         [ 7]  103 	add	a, #0xc1
   005B 5F            [ 4]  104 	ld	e, a
   005C 7A            [ 4]  105 	ld	a, d
   005D CE FF         [ 7]  106 	adc	a, #0xff
   005F                     107 00103$:
                            108 ;src/txt_scroll_hard.c:32: pointeur=(u16)g_tile_fontmap32x32plat_000+o*8*(32*2)+mod*(32*2);
   005F 21r00r00      [10]  109 	ld	hl, #_g_tile_fontmap32x32plat_000
   0062 7B            [ 4]  110 	ld	a, e
   0063 87            [ 4]  111 	add	a, a
   0064 57            [ 4]  112 	ld	d, a
   0065 1E 00         [ 7]  113 	ld	e, #0x00
   0067 19            [11]  114 	add	hl,de
   0068 EB            [ 4]  115 	ex	de,hl
   0069 69            [ 4]  116 	ld	l, c
   006A 60            [ 4]  117 	ld	h, b
   006B 29            [11]  118 	add	hl, hl
   006C 29            [11]  119 	add	hl, hl
   006D 29            [11]  120 	add	hl, hl
   006E 29            [11]  121 	add	hl, hl
   006F 29            [11]  122 	add	hl, hl
   0070 29            [11]  123 	add	hl, hl
   0071 19            [11]  124 	add	hl, de
                            125 ;src/txt_scroll_hard.c:34: cpct_drawSprite((u8*)pointeur, plot, G_TILE_FONTMAP32X32PLAT_000_W, G_TILE_FONTMAP32X32PLAT_000_H);
   0072 C1            [10]  126 	pop	bc
   0073 C5            [11]  127 	push	bc
   0074 11 02 20      [10]  128 	ld	de, #0x2002
   0077 D5            [11]  129 	push	de
   0078 C5            [11]  130 	push	bc
   0079 E5            [11]  131 	push	hl
   007A CDr00r00      [17]  132 	call	_cpct_drawSprite
   007D DD F9         [10]  133 	ld	sp, ix
   007F DD E1         [14]  134 	pop	ix
   0081 C9            [10]  135 	ret
   0082                     136 _texte:
   0082 57 45 20 57 49 53   137 	.ascii "WE WISH YOU A MERRY CHRISTMAS WE WISH YOU A MERRY CHRISTMAS "
        48 20 59 4F 55 20
        41 20 4D 45 52 52
        59 20 43 48 52 49
        53 54 4D 41 53 20
        57 45 20 57 49 53
        48 20 59 4F 55 20
        41 20 4D 45 52 52
        59 20 43 48 52 49
        53 54 4D 41 53 20
   00BE 41 4E 44 20 41 20   138 	.ascii "AND A HAPPY NEW YEAR FROM THSF AND TETALAB   AZERTYUIOPQSDFG"
        48 41 50 50 59 20
        4E 45 57 20 59 45
        41 52 20 46 52 4F
        4D 20 54 48 53 46
        20 41 4E 44 20 54
        45 54 41 4C 41 42
        20 20 20 41 5A 45
        52 54 59 55 49 4F
        50 51 53 44 46 47
   00FA 48 20 20 20 20 20   139 	.ascii "H     "
   0100 00                  140 	.db 0x00
                            141 	.area _CODE
                            142 	.area _INITIALIZER
                            143 	.area _CABS (ABS)
