                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.8 #9946 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module txt_scroll_hard
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _scroll_hard
                             12 	.globl _draw_char
                             13 	.globl _cpct_getScreenPtr
                             14 	.globl _cpct_drawTileAligned2x8_f
                             15 	.globl _firstPlotScreen2
                             16 	.globl _c_screen3
                             17 	.globl _plot_screen2
                             18 	.globl _texte
                             19 ;--------------------------------------------------------
                             20 ; special function registers
                             21 ;--------------------------------------------------------
                             22 ;--------------------------------------------------------
                             23 ; ram data
                             24 ;--------------------------------------------------------
                             25 	.area _DATA
   0000                      26 _plot_screen2::
   0000                      27 	.ds 2
   0002                      28 _c_screen3::
   0002                      29 	.ds 1
                             30 ;--------------------------------------------------------
                             31 ; ram data
                             32 ;--------------------------------------------------------
                             33 	.area _INITIALIZED
   0000                      34 _firstPlotScreen2::
   0000                      35 	.ds 1
                             36 ;--------------------------------------------------------
                             37 ; absolute external ram data
                             38 ;--------------------------------------------------------
                             39 	.area _DABS (ABS)
                             40 ;--------------------------------------------------------
                             41 ; global & static initialisations
                             42 ;--------------------------------------------------------
                             43 	.area _HOME
                             44 	.area _GSINIT
                             45 	.area _GSFINAL
                             46 	.area _GSINIT
                             47 ;--------------------------------------------------------
                             48 ; Home
                             49 ;--------------------------------------------------------
                             50 	.area _HOME
                             51 	.area _HOME
                             52 ;--------------------------------------------------------
                             53 ; code
                             54 ;--------------------------------------------------------
                             55 	.area _CODE
                             56 ;src/txt_scroll_hard.c:16: u8 draw_char(u8 c, u8 ce2, u8* image, u8* plot) {
                             57 ;	---------------------------------
                             58 ; Function draw_char
                             59 ; ---------------------------------
   0000                      60 _draw_char::
   0000 DD E5         [15]   61 	push	ix
   0002 DD 21 00 00   [14]   62 	ld	ix,#0
   0006 DD 39         [15]   63 	add	ix,sp
   0008 F5            [11]   64 	push	af
                             65 ;src/txt_scroll_hard.c:24: u8 c_screen2=ce2;
   0009 DD 4E 05      [19]   66 	ld	c, 5 (ix)
                             67 ;src/txt_scroll_hard.c:25: last_plot=plot+ 0x4000 +80u*c+ 0x3801;
   000C DD 5E 04      [19]   68 	ld	e, 4 (ix)
   000F 16 00         [ 7]   69 	ld	d, #0x00
   0011 6B            [ 4]   70 	ld	l, e
   0012 62            [ 4]   71 	ld	h, d
   0013 29            [11]   72 	add	hl, hl
   0014 29            [11]   73 	add	hl, hl
   0015 19            [11]   74 	add	hl, de
   0016 29            [11]   75 	add	hl, hl
   0017 29            [11]   76 	add	hl, hl
   0018 29            [11]   77 	add	hl, hl
   0019 29            [11]   78 	add	hl, hl
   001A EB            [ 4]   79 	ex	de,hl
   001B 21 01 78      [10]   80 	ld	hl, #0x7801
   001E 19            [11]   81 	add	hl,de
   001F EB            [ 4]   82 	ex	de,hl
   0020 DD 6E 08      [19]   83 	ld	l,8 (ix)
   0023 DD 66 09      [19]   84 	ld	h,9 (ix)
   0026 19            [11]   85 	add	hl, de
                             86 ;src/txt_scroll_hard.c:27: if (last_plot<0x4000) {
   0027 33            [ 6]   87 	inc	sp
   0028 33            [ 6]   88 	inc	sp
   0029 E5            [11]   89 	push	hl
                             90 ;src/txt_scroll_hard.c:71: cpct_drawTileAligned2x8_f((u8*)image+(2*8)*c, p);
   002A DD 6E 04      [19]   91 	ld	l, 4 (ix)
   002D 26 00         [ 7]   92 	ld	h, #0x00
   002F 29            [11]   93 	add	hl, hl
   0030 29            [11]   94 	add	hl, hl
   0031 29            [11]   95 	add	hl, hl
   0032 29            [11]   96 	add	hl, hl
   0033 EB            [ 4]   97 	ex	de,hl
   0034 DD 6E 06      [19]   98 	ld	l,6 (ix)
   0037 DD 66 07      [19]   99 	ld	h,7 (ix)
   003A 19            [11]  100 	add	hl, de
   003B EB            [ 4]  101 	ex	de,hl
                            102 ;src/txt_scroll_hard.c:27: if (last_plot<0x4000) {
   003C DD 7E FF      [19]  103 	ld	a, -1 (ix)
   003F D6 40         [ 7]  104 	sub	a, #0x40
   0041 30 48         [12]  105 	jr	NC,00106$
                            106 ;src/txt_scroll_hard.c:29: c_screen3=c;
   0043 DD 46 04      [19]  107 	ld	b, 4 (ix)
                            108 ;src/txt_scroll_hard.c:28: if (c<c_screen3) {
   0046 21r02r00      [10]  109 	ld	hl, #_c_screen3
   0049 DD 7E 04      [19]  110 	ld	a, 4 (ix)
   004C 96            [ 7]  111 	sub	a, (hl)
   004D 30 0A         [12]  112 	jr	NC,00102$
                            113 ;src/txt_scroll_hard.c:29: c_screen3=c;
   004F 21r02r00      [10]  114 	ld	hl,#_c_screen3 + 0
   0052 70            [ 7]  115 	ld	(hl), b
                            116 ;src/txt_scroll_hard.c:30: plot_screen2=0x8000;
   0053 21 00 80      [10]  117 	ld	hl, #0x8000
   0056 22r00r00      [16]  118 	ld	(_plot_screen2), hl
   0059                     119 00102$:
                            120 ;src/txt_scroll_hard.c:32: if (c<c_screen2) {
   0059 DD 7E 04      [19]  121 	ld	a, 4 (ix)
   005C 91            [ 4]  122 	sub	a, c
   005D 30 01         [12]  123 	jr	NC,00104$
                            124 ;src/txt_scroll_hard.c:33: c_screen2=c;
   005F 48            [ 4]  125 	ld	c, b
   0060                     126 00104$:
                            127 ;src/txt_scroll_hard.c:51: p = cpct_getScreenPtr(plot_screen2+0x4000, 0,8*(c-c_screen2));
   0060 DD 7E 04      [19]  128 	ld	a, 4 (ix)
   0063 91            [ 4]  129 	sub	a, c
   0064 07            [ 4]  130 	rlca
   0065 07            [ 4]  131 	rlca
   0066 07            [ 4]  132 	rlca
   0067 E6 F8         [ 7]  133 	and	a, #0xf8
   0069 47            [ 4]  134 	ld	b, a
   006A FD 21 00 40   [14]  135 	ld	iy, #0x4000
   006E C5            [11]  136 	push	bc
   006F ED 4Br00r00   [20]  137 	ld	bc, (_plot_screen2)
   0073 FD 09         [15]  138 	add	iy, bc
   0075 C1            [10]  139 	pop	bc
   0076 C5            [11]  140 	push	bc
   0077 D5            [11]  141 	push	de
   0078 C5            [11]  142 	push	bc
   0079 33            [ 6]  143 	inc	sp
   007A AF            [ 4]  144 	xor	a, a
   007B F5            [11]  145 	push	af
   007C 33            [ 6]  146 	inc	sp
   007D FD E5         [15]  147 	push	iy
   007F CDr00r00      [17]  148 	call	_cpct_getScreenPtr
   0082 D1            [10]  149 	pop	de
   0083 E5            [11]  150 	push	hl
   0084 D5            [11]  151 	push	de
   0085 CDr00r00      [17]  152 	call	_cpct_drawTileAligned2x8_f
   0088 C1            [10]  153 	pop	bc
   0089 18 28         [12]  154 	jr	00107$
   008B                     155 00106$:
                            156 ;src/txt_scroll_hard.c:92: p = cpct_getScreenPtr(plot+0x4000, 0,8*c);
   008B DD 7E 04      [19]  157 	ld	a, 4 (ix)
   008E 07            [ 4]  158 	rlca
   008F 07            [ 4]  159 	rlca
   0090 07            [ 4]  160 	rlca
   0091 E6 F8         [ 7]  161 	and	a, #0xf8
   0093 67            [ 4]  162 	ld	h, a
   0094 DD 7E 08      [19]  163 	ld	a, 8 (ix)
   0097 C6 00         [ 7]  164 	add	a, #0x00
   0099 6F            [ 4]  165 	ld	l, a
   009A DD 7E 09      [19]  166 	ld	a, 9 (ix)
   009D CE 40         [ 7]  167 	adc	a, #0x40
   009F 47            [ 4]  168 	ld	b, a
   00A0 C5            [11]  169 	push	bc
   00A1 D5            [11]  170 	push	de
   00A2 E5            [11]  171 	push	hl
   00A3 33            [ 6]  172 	inc	sp
   00A4 AF            [ 4]  173 	xor	a, a
   00A5 F5            [11]  174 	push	af
   00A6 33            [ 6]  175 	inc	sp
   00A7 60            [ 4]  176 	ld	h, b
   00A8 E5            [11]  177 	push	hl
   00A9 CDr00r00      [17]  178 	call	_cpct_getScreenPtr
   00AC D1            [10]  179 	pop	de
   00AD E5            [11]  180 	push	hl
   00AE D5            [11]  181 	push	de
   00AF CDr00r00      [17]  182 	call	_cpct_drawTileAligned2x8_f
   00B2 C1            [10]  183 	pop	bc
   00B3                     184 00107$:
                            185 ;src/txt_scroll_hard.c:95: return c_screen2;
   00B3 69            [ 4]  186 	ld	l, c
   00B4 DD F9         [10]  187 	ld	sp, ix
   00B6 DD E1         [14]  188 	pop	ix
   00B8 C9            [10]  189 	ret
                            190 ;src/txt_scroll_hard.c:106: void scroll_hard(u16 step, u8* screen_plot_address) {
                            191 ;	---------------------------------
                            192 ; Function scroll_hard
                            193 ; ---------------------------------
   00B9                     194 _scroll_hard::
   00B9 DD E5         [15]  195 	push	ix
   00BB DD 21 00 00   [14]  196 	ld	ix,#0
   00BF DD 39         [15]  197 	add	ix,sp
   00C1 F5            [11]  198 	push	af
                            199 ;src/txt_scroll_hard.c:113: u8* plot=screen_plot_address;
   00C2 DD 4E 06      [19]  200 	ld	c,6 (ix)
   00C5 DD 46 07      [19]  201 	ld	b,7 (ix)
                            202 ;src/txt_scroll_hard.c:117: div=step/8;
   00C8 DD 5E 04      [19]  203 	ld	e,4 (ix)
   00CB DD 56 05      [19]  204 	ld	d,5 (ix)
   00CE CB 3A         [ 8]  205 	srl	d
   00D0 CB 1B         [ 8]  206 	rr	e
   00D2 CB 3A         [ 8]  207 	srl	d
   00D4 CB 1B         [ 8]  208 	rr	e
   00D6 CB 3A         [ 8]  209 	srl	d
   00D8 CB 1B         [ 8]  210 	rr	e
                            211 ;src/txt_scroll_hard.c:118: mod=step%8;
   00DA DD 7E 04      [19]  212 	ld	a, 4 (ix)
   00DD E6 07         [ 7]  213 	and	a, #0x07
   00DF DD 77 FE      [19]  214 	ld	-2 (ix), a
   00E2 DD 36 FF 00   [19]  215 	ld	-1 (ix), #0x00
                            216 ;src/txt_scroll_hard.c:119: div=div%128;
   00E6 CB BB         [ 8]  217 	res	7, e
   00E8 16 00         [ 7]  218 	ld	d, #0x00
                            219 ;src/txt_scroll_hard.c:120: if (texte[div]==' ') {
   00EA 21r88r01      [10]  220 	ld	hl, #_texte+0
   00ED 19            [11]  221 	add	hl, de
   00EE 5E            [ 7]  222 	ld	e, (hl)
   00EF 7B            [ 4]  223 	ld	a, e
   00F0 D6 20         [ 7]  224 	sub	a, #0x20
   00F2 20 05         [12]  225 	jr	NZ,00102$
                            226 ;src/txt_scroll_hard.c:121: o=0;
   00F4 11 00 00      [10]  227 	ld	de, #0x0000
   00F7 18 09         [12]  228 	jr	00103$
   00F9                     229 00102$:
                            230 ;src/txt_scroll_hard.c:123: o=texte[div]-'?';
   00F9 16 00         [ 7]  231 	ld	d, #0x00
   00FB 7B            [ 4]  232 	ld	a, e
   00FC C6 C1         [ 7]  233 	add	a, #0xc1
   00FE 5F            [ 4]  234 	ld	e, a
   00FF 7A            [ 4]  235 	ld	a, d
   0100 CE FF         [ 7]  236 	adc	a, #0xff
   0102                     237 00103$:
                            238 ;src/txt_scroll_hard.c:126: pointeur=(u16)g_tile_fontmap32x32plat_000+o*8*(32*2)+mod*(32*2);
   0102 21r00r00      [10]  239 	ld	hl, #_g_tile_fontmap32x32plat_000
   0105 7B            [ 4]  240 	ld	a, e
   0106 87            [ 4]  241 	add	a, a
   0107 57            [ 4]  242 	ld	d, a
   0108 1E 00         [ 7]  243 	ld	e, #0x00
   010A 19            [11]  244 	add	hl,de
   010B EB            [ 4]  245 	ex	de,hl
   010C E1            [10]  246 	pop	hl
   010D E5            [11]  247 	push	hl
   010E 29            [11]  248 	add	hl, hl
   010F 29            [11]  249 	add	hl, hl
   0110 29            [11]  250 	add	hl, hl
   0111 29            [11]  251 	add	hl, hl
   0112 29            [11]  252 	add	hl, hl
   0113 29            [11]  253 	add	hl, hl
   0114 19            [11]  254 	add	hl,de
   0115 EB            [ 4]  255 	ex	de,hl
                            256 ;src/txt_scroll_hard.c:130: ce2=draw_char(0,4,(u8*)pointeur, plot);
   0116 C5            [11]  257 	push	bc
   0117 D5            [11]  258 	push	de
   0118 C5            [11]  259 	push	bc
   0119 D5            [11]  260 	push	de
   011A 21 00 04      [10]  261 	ld	hl, #0x0400
   011D E5            [11]  262 	push	hl
   011E CDr00r00      [17]  263 	call	_draw_char
   0121 F1            [10]  264 	pop	af
   0122 F1            [10]  265 	pop	af
   0123 F1            [10]  266 	pop	af
   0124 D1            [10]  267 	pop	de
   0125 C1            [10]  268 	pop	bc
   0126 65            [ 4]  269 	ld	h, l
                            270 ;src/txt_scroll_hard.c:131: ce2=draw_char(1,ce2,(u8*)pointeur, plot);
   0127 C5            [11]  271 	push	bc
   0128 D5            [11]  272 	push	de
   0129 C5            [11]  273 	push	bc
   012A D5            [11]  274 	push	de
   012B E5            [11]  275 	push	hl
   012C 33            [ 6]  276 	inc	sp
   012D 3E 01         [ 7]  277 	ld	a, #0x01
   012F F5            [11]  278 	push	af
   0130 33            [ 6]  279 	inc	sp
   0131 CDr00r00      [17]  280 	call	_draw_char
   0134 F1            [10]  281 	pop	af
   0135 F1            [10]  282 	pop	af
   0136 F1            [10]  283 	pop	af
   0137 D1            [10]  284 	pop	de
   0138 C1            [10]  285 	pop	bc
   0139 65            [ 4]  286 	ld	h, l
                            287 ;src/txt_scroll_hard.c:132: ce2=draw_char(2,ce2,(u8*)pointeur, plot);
   013A C5            [11]  288 	push	bc
   013B D5            [11]  289 	push	de
   013C C5            [11]  290 	push	bc
   013D D5            [11]  291 	push	de
   013E E5            [11]  292 	push	hl
   013F 33            [ 6]  293 	inc	sp
   0140 3E 02         [ 7]  294 	ld	a, #0x02
   0142 F5            [11]  295 	push	af
   0143 33            [ 6]  296 	inc	sp
   0144 CDr00r00      [17]  297 	call	_draw_char
   0147 F1            [10]  298 	pop	af
   0148 F1            [10]  299 	pop	af
   0149 F1            [10]  300 	pop	af
   014A D1            [10]  301 	pop	de
   014B C1            [10]  302 	pop	bc
   014C 65            [ 4]  303 	ld	h, l
                            304 ;src/txt_scroll_hard.c:133: ce2=draw_char(3,ce2,(u8*)pointeur, plot);
   014D C5            [11]  305 	push	bc
   014E D5            [11]  306 	push	de
   014F E5            [11]  307 	push	hl
   0150 33            [ 6]  308 	inc	sp
   0151 3E 03         [ 7]  309 	ld	a, #0x03
   0153 F5            [11]  310 	push	af
   0154 33            [ 6]  311 	inc	sp
   0155 CDr00r00      [17]  312 	call	_draw_char
   0158 F1            [10]  313 	pop	af
   0159 F1            [10]  314 	pop	af
   015A F1            [10]  315 	pop	af
                            316 ;src/txt_scroll_hard.c:134: if (ce2==4) {
   015B 7D            [ 4]  317 	ld	a, l
   015C D6 04         [ 7]  318 	sub	a, #0x04
   015E 20 0D         [12]  319 	jr	NZ,00105$
                            320 ;src/txt_scroll_hard.c:136: plot_screen2=0x8000;
   0160 21 00 80      [10]  321 	ld	hl, #0x8000
   0163 22r00r00      [16]  322 	ld	(_plot_screen2), hl
                            323 ;src/txt_scroll_hard.c:137: c_screen3=4;
   0166 21r02r00      [10]  324 	ld	hl,#_c_screen3 + 0
   0169 36 04         [10]  325 	ld	(hl), #0x04
   016B 18 16         [12]  326 	jr	00107$
   016D                     327 00105$:
                            328 ;src/txt_scroll_hard.c:139: plot_screen2+=2;
   016D 21r00r00      [10]  329 	ld	hl, #_plot_screen2
   0170 7E            [ 7]  330 	ld	a, (hl)
   0171 C6 02         [ 7]  331 	add	a, #0x02
   0173 77            [ 7]  332 	ld	(hl), a
   0174 23            [ 6]  333 	inc	hl
   0175 7E            [ 7]  334 	ld	a, (hl)
   0176 CE 00         [ 7]  335 	adc	a, #0x00
   0178 77            [ 7]  336 	ld	(hl), a
                            337 ;src/txt_scroll_hard.c:140: plot_screen2=(u8 *)(((u16)plot_screen2) & 0x87FF);
   0179 2Ar00r00      [16]  338 	ld	hl, (_plot_screen2)
   017C 7C            [ 4]  339 	ld	a, h
   017D E6 87         [ 7]  340 	and	a, #0x87
   017F 67            [ 4]  341 	ld	h, a
   0180 22r00r00      [16]  342 	ld	(_plot_screen2), hl
   0183                     343 00107$:
   0183 DD F9         [10]  344 	ld	sp, ix
   0185 DD E1         [14]  345 	pop	ix
   0187 C9            [10]  346 	ret
   0188                     347 _texte:
   0188 57 45 20 57 49 53   348 	.ascii "WE WISH YOU A MERRY CHRISTMAS WE WISH YOU A MERRY CHRISTMAS "
        48 20 59 4F 55 20
        41 20 4D 45 52 52
        59 20 43 48 52 49
        53 54 4D 41 53 20
        57 45 20 57 49 53
        48 20 59 4F 55 20
        41 20 4D 45 52 52
        59 20 43 48 52 49
        53 54 4D 41 53 20
   01C4 41 4E 44 20 41 20   349 	.ascii "AND A HAPPY NEW YEAR FROM THSF AND TETALAB      AZERTYUIOPQS"
        48 41 50 50 59 20
        4E 45 57 20 59 45
        41 52 20 46 52 4F
        4D 20 54 48 53 46
        20 41 4E 44 20 54
        45 54 41 4C 41 42
        20 20 20 20 20 20
        41 5A 45 52 54 59
        55 49 4F 50 51 53
   0200 44 46 47 20 20 20   350 	.ascii "DFG     "
        20 20
   0208 00                  351 	.db 0x00
   0209 00                  352 	.db 0x00
                            353 	.area _CODE
                            354 	.area _INITIALIZER
   0000                     355 __xinit__firstPlotScreen2:
   0000 01                  356 	.db #0x01	; 1
                            357 	.area _CABS (ABS)
