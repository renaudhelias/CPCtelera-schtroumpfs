                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.8 #9946 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module txt_scroll_hard
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _scroll_hard
                             12 	.globl _draw_char
                             13 	.globl _cpct_getScreenPtr
                             14 	.globl _cpct_drawSolidBox
                             15 	.globl _cpct_drawTileAligned2x8_f
                             16 	.globl _firstPlotScreen2
                             17 	.globl _c_screen3
                             18 	.globl _plot_screen2
                             19 	.globl _texte
                             20 ;--------------------------------------------------------
                             21 ; special function registers
                             22 ;--------------------------------------------------------
                             23 ;--------------------------------------------------------
                             24 ; ram data
                             25 ;--------------------------------------------------------
                             26 	.area _DATA
   0000                      27 _plot_screen2::
   0000                      28 	.ds 2
   0002                      29 _c_screen3::
   0002                      30 	.ds 1
                             31 ;--------------------------------------------------------
                             32 ; ram data
                             33 ;--------------------------------------------------------
                             34 	.area _INITIALIZED
   0000                      35 _firstPlotScreen2::
   0000                      36 	.ds 1
                             37 ;--------------------------------------------------------
                             38 ; absolute external ram data
                             39 ;--------------------------------------------------------
                             40 	.area _DABS (ABS)
                             41 ;--------------------------------------------------------
                             42 ; global & static initialisations
                             43 ;--------------------------------------------------------
                             44 	.area _HOME
                             45 	.area _GSINIT
                             46 	.area _GSFINAL
                             47 	.area _GSINIT
                             48 ;--------------------------------------------------------
                             49 ; Home
                             50 ;--------------------------------------------------------
                             51 	.area _HOME
                             52 	.area _HOME
                             53 ;--------------------------------------------------------
                             54 ; code
                             55 ;--------------------------------------------------------
                             56 	.area _CODE
                             57 ;src/txt_scroll_hard.c:16: u8 draw_char(u8 c, u8 ce2, u8* image, u8* plot) {
                             58 ;	---------------------------------
                             59 ; Function draw_char
                             60 ; ---------------------------------
   0000                      61 _draw_char::
   0000 DD E5         [15]   62 	push	ix
   0002 DD 21 00 00   [14]   63 	ld	ix,#0
   0006 DD 39         [15]   64 	add	ix,sp
   0008 F5            [11]   65 	push	af
                             66 ;src/txt_scroll_hard.c:24: u8 c_screen2=ce2;
   0009 DD 4E 05      [19]   67 	ld	c, 5 (ix)
                             68 ;src/txt_scroll_hard.c:25: last_plot=plot+ 0x4000 +80u*c+ 0x3801;
   000C DD 5E 04      [19]   69 	ld	e, 4 (ix)
   000F 16 00         [ 7]   70 	ld	d, #0x00
   0011 6B            [ 4]   71 	ld	l, e
   0012 62            [ 4]   72 	ld	h, d
   0013 29            [11]   73 	add	hl, hl
   0014 29            [11]   74 	add	hl, hl
   0015 19            [11]   75 	add	hl, de
   0016 29            [11]   76 	add	hl, hl
   0017 29            [11]   77 	add	hl, hl
   0018 29            [11]   78 	add	hl, hl
   0019 29            [11]   79 	add	hl, hl
   001A EB            [ 4]   80 	ex	de,hl
   001B 21 01 78      [10]   81 	ld	hl, #0x7801
   001E 19            [11]   82 	add	hl,de
   001F EB            [ 4]   83 	ex	de,hl
   0020 DD 6E 08      [19]   84 	ld	l,8 (ix)
   0023 DD 66 09      [19]   85 	ld	h,9 (ix)
   0026 19            [11]   86 	add	hl, de
                             87 ;src/txt_scroll_hard.c:27: if (last_plot<0x4000) {
   0027 33            [ 6]   88 	inc	sp
   0028 33            [ 6]   89 	inc	sp
   0029 E5            [11]   90 	push	hl
                             91 ;src/txt_scroll_hard.c:53: cpct_drawTileAligned2x8_f((u8*)image+(2*8)*c, p);
   002A DD 6E 04      [19]   92 	ld	l, 4 (ix)
   002D 26 00         [ 7]   93 	ld	h, #0x00
   002F 29            [11]   94 	add	hl, hl
   0030 29            [11]   95 	add	hl, hl
   0031 29            [11]   96 	add	hl, hl
   0032 29            [11]   97 	add	hl, hl
   0033 EB            [ 4]   98 	ex	de,hl
   0034 DD 6E 06      [19]   99 	ld	l,6 (ix)
   0037 DD 66 07      [19]  100 	ld	h,7 (ix)
   003A 19            [11]  101 	add	hl, de
   003B EB            [ 4]  102 	ex	de,hl
                            103 ;src/txt_scroll_hard.c:27: if (last_plot<0x4000) {
   003C DD 7E FF      [19]  104 	ld	a, -1 (ix)
   003F D6 40         [ 7]  105 	sub	a, #0x40
   0041 D2rD0r00      [10]  106 	jp	NC, 00114$
                            107 ;src/txt_scroll_hard.c:29: c_screen3=c;
   0044 DD 46 04      [19]  108 	ld	b, 4 (ix)
                            109 ;src/txt_scroll_hard.c:28: if (c<c_screen3) {
   0047 21r02r00      [10]  110 	ld	hl, #_c_screen3
   004A DD 7E 04      [19]  111 	ld	a, 4 (ix)
   004D 96            [ 7]  112 	sub	a, (hl)
   004E 30 0A         [12]  113 	jr	NC,00102$
                            114 ;src/txt_scroll_hard.c:29: c_screen3=c;
   0050 21r02r00      [10]  115 	ld	hl,#_c_screen3 + 0
   0053 70            [ 7]  116 	ld	(hl), b
                            117 ;src/txt_scroll_hard.c:30: plot_screen2=0x8000;
   0054 21 00 80      [10]  118 	ld	hl, #0x8000
   0057 22r00r00      [16]  119 	ld	(_plot_screen2), hl
   005A                     120 00102$:
                            121 ;src/txt_scroll_hard.c:32: if (c<c_screen2) {
   005A DD 7E 04      [19]  122 	ld	a, 4 (ix)
   005D 91            [ 4]  123 	sub	a, c
   005E 30 01         [12]  124 	jr	NC,00104$
                            125 ;src/txt_scroll_hard.c:33: c_screen2=c;
   0060 48            [ 4]  126 	ld	c, b
   0061                     127 00104$:
                            128 ;src/txt_scroll_hard.c:51: p = cpct_getScreenPtr(plot_screen2+0x4000, 0,8*(c-c_screen2));
   0061 DD 7E 04      [19]  129 	ld	a, 4 (ix)
   0064 91            [ 4]  130 	sub	a, c
   0065 07            [ 4]  131 	rlca
   0066 07            [ 4]  132 	rlca
   0067 07            [ 4]  133 	rlca
   0068 E6 F8         [ 7]  134 	and	a, #0xf8
   006A 47            [ 4]  135 	ld	b, a
   006B FD 21 00 40   [14]  136 	ld	iy, #0x4000
   006F C5            [11]  137 	push	bc
   0070 ED 4Br00r00   [20]  138 	ld	bc, (_plot_screen2)
   0074 FD 09         [15]  139 	add	iy, bc
   0076 C1            [10]  140 	pop	bc
   0077 C5            [11]  141 	push	bc
   0078 D5            [11]  142 	push	de
   0079 C5            [11]  143 	push	bc
   007A 33            [ 6]  144 	inc	sp
   007B AF            [ 4]  145 	xor	a, a
   007C F5            [11]  146 	push	af
   007D 33            [ 6]  147 	inc	sp
   007E FD E5         [15]  148 	push	iy
   0080 CDr00r00      [17]  149 	call	_cpct_getScreenPtr
   0083 D1            [10]  150 	pop	de
   0084 C1            [10]  151 	pop	bc
                            152 ;src/txt_scroll_hard.c:52: if (c_screen2==3 && c==3) {
   0085 DD 7E 04      [19]  153 	ld	a, 4 (ix)
   0088 D6 03         [ 7]  154 	sub	a, #0x03
   008A 20 04         [12]  155 	jr	NZ,00146$
   008C 3E 01         [ 7]  156 	ld	a,#0x01
   008E 18 01         [12]  157 	jr	00147$
   0090                     158 00146$:
   0090 AF            [ 4]  159 	xor	a,a
   0091                     160 00147$:
   0091 47            [ 4]  161 	ld	b, a
                            162 ;src/txt_scroll_hard.c:53: cpct_drawTileAligned2x8_f((u8*)image+(2*8)*c, p);
                            163 ;src/txt_scroll_hard.c:52: if (c_screen2==3 && c==3) {
   0092 79            [ 4]  164 	ld	a, c
   0093 D6 03         [ 7]  165 	sub	a,#0x03
   0095 20 0C         [12]  166 	jr	NZ,00110$
   0097 B0            [ 4]  167 	or	a,b
   0098 28 09         [12]  168 	jr	Z,00110$
                            169 ;src/txt_scroll_hard.c:53: cpct_drawTileAligned2x8_f((u8*)image+(2*8)*c, p);
   009A C5            [11]  170 	push	bc
   009B E5            [11]  171 	push	hl
   009C D5            [11]  172 	push	de
   009D CDr00r00      [17]  173 	call	_cpct_drawTileAligned2x8_f
   00A0 C1            [10]  174 	pop	bc
   00A1 18 55         [12]  175 	jr	00115$
   00A3                     176 00110$:
                            177 ;src/txt_scroll_hard.c:54: } else if (c_screen2==2 && c==3) { // le "suivant" en bas, donc 0 1
   00A3 79            [ 4]  178 	ld	a, c
   00A4 D6 02         [ 7]  179 	sub	a,#0x02
   00A6 20 16         [12]  180 	jr	NZ,00106$
   00A8 B0            [ 4]  181 	or	a,b
   00A9 28 13         [12]  182 	jr	Z,00106$
                            183 ;src/txt_scroll_hard.c:56: cpct_drawSolidBox(p,0xFF,2,8);
   00AB C5            [11]  184 	push	bc
   00AC 11 02 08      [10]  185 	ld	de, #0x0802
   00AF D5            [11]  186 	push	de
   00B0 3E FF         [ 7]  187 	ld	a, #0xff
   00B2 F5            [11]  188 	push	af
   00B3 33            [ 6]  189 	inc	sp
   00B4 E5            [11]  190 	push	hl
   00B5 CDr00r00      [17]  191 	call	_cpct_drawSolidBox
   00B8 F1            [10]  192 	pop	af
   00B9 F1            [10]  193 	pop	af
   00BA 33            [ 6]  194 	inc	sp
   00BB C1            [10]  195 	pop	bc
   00BC 18 3A         [12]  196 	jr	00115$
   00BE                     197 00106$:
                            198 ;src/txt_scroll_hard.c:58: cpct_drawSolidBox(p,c_screen2,2,8);
   00BE C5            [11]  199 	push	bc
   00BF 11 02 08      [10]  200 	ld	de, #0x0802
   00C2 D5            [11]  201 	push	de
   00C3 79            [ 4]  202 	ld	a, c
   00C4 F5            [11]  203 	push	af
   00C5 33            [ 6]  204 	inc	sp
   00C6 E5            [11]  205 	push	hl
   00C7 CDr00r00      [17]  206 	call	_cpct_drawSolidBox
   00CA F1            [10]  207 	pop	af
   00CB F1            [10]  208 	pop	af
   00CC 33            [ 6]  209 	inc	sp
   00CD C1            [10]  210 	pop	bc
   00CE 18 28         [12]  211 	jr	00115$
   00D0                     212 00114$:
                            213 ;src/txt_scroll_hard.c:80: p = cpct_getScreenPtr(plot+0x4000, 0,8*c);
   00D0 DD 7E 04      [19]  214 	ld	a, 4 (ix)
   00D3 07            [ 4]  215 	rlca
   00D4 07            [ 4]  216 	rlca
   00D5 07            [ 4]  217 	rlca
   00D6 E6 F8         [ 7]  218 	and	a, #0xf8
   00D8 67            [ 4]  219 	ld	h, a
   00D9 DD 7E 08      [19]  220 	ld	a, 8 (ix)
   00DC C6 00         [ 7]  221 	add	a, #0x00
   00DE 6F            [ 4]  222 	ld	l, a
   00DF DD 7E 09      [19]  223 	ld	a, 9 (ix)
   00E2 CE 40         [ 7]  224 	adc	a, #0x40
   00E4 47            [ 4]  225 	ld	b, a
   00E5 C5            [11]  226 	push	bc
   00E6 D5            [11]  227 	push	de
   00E7 E5            [11]  228 	push	hl
   00E8 33            [ 6]  229 	inc	sp
   00E9 AF            [ 4]  230 	xor	a, a
   00EA F5            [11]  231 	push	af
   00EB 33            [ 6]  232 	inc	sp
   00EC 60            [ 4]  233 	ld	h, b
   00ED E5            [11]  234 	push	hl
   00EE CDr00r00      [17]  235 	call	_cpct_getScreenPtr
   00F1 D1            [10]  236 	pop	de
   00F2 E5            [11]  237 	push	hl
   00F3 D5            [11]  238 	push	de
   00F4 CDr00r00      [17]  239 	call	_cpct_drawTileAligned2x8_f
   00F7 C1            [10]  240 	pop	bc
   00F8                     241 00115$:
                            242 ;src/txt_scroll_hard.c:83: return c_screen2;
   00F8 69            [ 4]  243 	ld	l, c
   00F9 DD F9         [10]  244 	ld	sp, ix
   00FB DD E1         [14]  245 	pop	ix
   00FD C9            [10]  246 	ret
                            247 ;src/txt_scroll_hard.c:94: void scroll_hard(u16 step, u8* screen_plot_address) {
                            248 ;	---------------------------------
                            249 ; Function scroll_hard
                            250 ; ---------------------------------
   00FE                     251 _scroll_hard::
   00FE DD E5         [15]  252 	push	ix
   0100 DD 21 00 00   [14]  253 	ld	ix,#0
   0104 DD 39         [15]  254 	add	ix,sp
   0106 F5            [11]  255 	push	af
                            256 ;src/txt_scroll_hard.c:101: u8* plot=screen_plot_address;
   0107 DD 4E 06      [19]  257 	ld	c,6 (ix)
   010A DD 46 07      [19]  258 	ld	b,7 (ix)
                            259 ;src/txt_scroll_hard.c:105: div=step/8;
   010D DD 5E 04      [19]  260 	ld	e,4 (ix)
   0110 DD 56 05      [19]  261 	ld	d,5 (ix)
   0113 CB 3A         [ 8]  262 	srl	d
   0115 CB 1B         [ 8]  263 	rr	e
   0117 CB 3A         [ 8]  264 	srl	d
   0119 CB 1B         [ 8]  265 	rr	e
   011B CB 3A         [ 8]  266 	srl	d
   011D CB 1B         [ 8]  267 	rr	e
                            268 ;src/txt_scroll_hard.c:106: mod=step%8;
   011F DD 7E 04      [19]  269 	ld	a, 4 (ix)
   0122 E6 07         [ 7]  270 	and	a, #0x07
   0124 DD 77 FE      [19]  271 	ld	-2 (ix), a
   0127 DD 36 FF 00   [19]  272 	ld	-1 (ix), #0x00
                            273 ;src/txt_scroll_hard.c:107: div=div%128;
   012B CB BB         [ 8]  274 	res	7, e
   012D 16 00         [ 7]  275 	ld	d, #0x00
                            276 ;src/txt_scroll_hard.c:108: if (texte[div]==' ') {
   012F 21rCDr01      [10]  277 	ld	hl, #_texte+0
   0132 19            [11]  278 	add	hl, de
   0133 5E            [ 7]  279 	ld	e, (hl)
   0134 7B            [ 4]  280 	ld	a, e
   0135 D6 20         [ 7]  281 	sub	a, #0x20
   0137 20 05         [12]  282 	jr	NZ,00102$
                            283 ;src/txt_scroll_hard.c:109: o=0;
   0139 11 00 00      [10]  284 	ld	de, #0x0000
   013C 18 09         [12]  285 	jr	00103$
   013E                     286 00102$:
                            287 ;src/txt_scroll_hard.c:111: o=texte[div]-'?';
   013E 16 00         [ 7]  288 	ld	d, #0x00
   0140 7B            [ 4]  289 	ld	a, e
   0141 C6 C1         [ 7]  290 	add	a, #0xc1
   0143 5F            [ 4]  291 	ld	e, a
   0144 7A            [ 4]  292 	ld	a, d
   0145 CE FF         [ 7]  293 	adc	a, #0xff
   0147                     294 00103$:
                            295 ;src/txt_scroll_hard.c:114: pointeur=(u16)g_tile_fontmap32x32plat_000+o*8*(32*2)+mod*(32*2);
   0147 21r00r00      [10]  296 	ld	hl, #_g_tile_fontmap32x32plat_000
   014A 7B            [ 4]  297 	ld	a, e
   014B 87            [ 4]  298 	add	a, a
   014C 57            [ 4]  299 	ld	d, a
   014D 1E 00         [ 7]  300 	ld	e, #0x00
   014F 19            [11]  301 	add	hl,de
   0150 EB            [ 4]  302 	ex	de,hl
   0151 E1            [10]  303 	pop	hl
   0152 E5            [11]  304 	push	hl
   0153 29            [11]  305 	add	hl, hl
   0154 29            [11]  306 	add	hl, hl
   0155 29            [11]  307 	add	hl, hl
   0156 29            [11]  308 	add	hl, hl
   0157 29            [11]  309 	add	hl, hl
   0158 29            [11]  310 	add	hl, hl
   0159 19            [11]  311 	add	hl,de
   015A EB            [ 4]  312 	ex	de,hl
                            313 ;src/txt_scroll_hard.c:118: ce2=draw_char(0,4,(u8*)pointeur, plot);
   015B C5            [11]  314 	push	bc
   015C D5            [11]  315 	push	de
   015D C5            [11]  316 	push	bc
   015E D5            [11]  317 	push	de
   015F 21 00 04      [10]  318 	ld	hl, #0x0400
   0162 E5            [11]  319 	push	hl
   0163 CDr00r00      [17]  320 	call	_draw_char
   0166 F1            [10]  321 	pop	af
   0167 F1            [10]  322 	pop	af
   0168 F1            [10]  323 	pop	af
   0169 D1            [10]  324 	pop	de
   016A C1            [10]  325 	pop	bc
   016B 65            [ 4]  326 	ld	h, l
                            327 ;src/txt_scroll_hard.c:119: ce2=draw_char(1,ce2,(u8*)pointeur, plot);
   016C C5            [11]  328 	push	bc
   016D D5            [11]  329 	push	de
   016E C5            [11]  330 	push	bc
   016F D5            [11]  331 	push	de
   0170 E5            [11]  332 	push	hl
   0171 33            [ 6]  333 	inc	sp
   0172 3E 01         [ 7]  334 	ld	a, #0x01
   0174 F5            [11]  335 	push	af
   0175 33            [ 6]  336 	inc	sp
   0176 CDr00r00      [17]  337 	call	_draw_char
   0179 F1            [10]  338 	pop	af
   017A F1            [10]  339 	pop	af
   017B F1            [10]  340 	pop	af
   017C D1            [10]  341 	pop	de
   017D C1            [10]  342 	pop	bc
   017E 65            [ 4]  343 	ld	h, l
                            344 ;src/txt_scroll_hard.c:120: ce2=draw_char(2,ce2,(u8*)pointeur, plot);
   017F C5            [11]  345 	push	bc
   0180 D5            [11]  346 	push	de
   0181 C5            [11]  347 	push	bc
   0182 D5            [11]  348 	push	de
   0183 E5            [11]  349 	push	hl
   0184 33            [ 6]  350 	inc	sp
   0185 3E 02         [ 7]  351 	ld	a, #0x02
   0187 F5            [11]  352 	push	af
   0188 33            [ 6]  353 	inc	sp
   0189 CDr00r00      [17]  354 	call	_draw_char
   018C F1            [10]  355 	pop	af
   018D F1            [10]  356 	pop	af
   018E F1            [10]  357 	pop	af
   018F D1            [10]  358 	pop	de
   0190 C1            [10]  359 	pop	bc
   0191 65            [ 4]  360 	ld	h, l
                            361 ;src/txt_scroll_hard.c:121: ce2=draw_char(3,ce2,(u8*)pointeur, plot);
   0192 C5            [11]  362 	push	bc
   0193 D5            [11]  363 	push	de
   0194 E5            [11]  364 	push	hl
   0195 33            [ 6]  365 	inc	sp
   0196 3E 03         [ 7]  366 	ld	a, #0x03
   0198 F5            [11]  367 	push	af
   0199 33            [ 6]  368 	inc	sp
   019A CDr00r00      [17]  369 	call	_draw_char
   019D F1            [10]  370 	pop	af
   019E F1            [10]  371 	pop	af
   019F F1            [10]  372 	pop	af
                            373 ;src/txt_scroll_hard.c:122: if (ce2==4) {
   01A0 7D            [ 4]  374 	ld	a, l
   01A1 D6 04         [ 7]  375 	sub	a, #0x04
   01A3 20 0D         [12]  376 	jr	NZ,00105$
                            377 ;src/txt_scroll_hard.c:124: plot_screen2=0x8000;
   01A5 21 00 80      [10]  378 	ld	hl, #0x8000
   01A8 22r00r00      [16]  379 	ld	(_plot_screen2), hl
                            380 ;src/txt_scroll_hard.c:125: c_screen3=4;
   01AB 21r02r00      [10]  381 	ld	hl,#_c_screen3 + 0
   01AE 36 04         [10]  382 	ld	(hl), #0x04
   01B0 18 16         [12]  383 	jr	00107$
   01B2                     384 00105$:
                            385 ;src/txt_scroll_hard.c:127: plot_screen2+=2;
   01B2 21r00r00      [10]  386 	ld	hl, #_plot_screen2
   01B5 7E            [ 7]  387 	ld	a, (hl)
   01B6 C6 02         [ 7]  388 	add	a, #0x02
   01B8 77            [ 7]  389 	ld	(hl), a
   01B9 23            [ 6]  390 	inc	hl
   01BA 7E            [ 7]  391 	ld	a, (hl)
   01BB CE 00         [ 7]  392 	adc	a, #0x00
   01BD 77            [ 7]  393 	ld	(hl), a
                            394 ;src/txt_scroll_hard.c:128: plot_screen2=(u8 *)(((u16)plot_screen2) & 0x87FF);
   01BE 2Ar00r00      [16]  395 	ld	hl, (_plot_screen2)
   01C1 7C            [ 4]  396 	ld	a, h
   01C2 E6 87         [ 7]  397 	and	a, #0x87
   01C4 67            [ 4]  398 	ld	h, a
   01C5 22r00r00      [16]  399 	ld	(_plot_screen2), hl
   01C8                     400 00107$:
   01C8 DD F9         [10]  401 	ld	sp, ix
   01CA DD E1         [14]  402 	pop	ix
   01CC C9            [10]  403 	ret
   01CD                     404 _texte:
   01CD 57 45 20 57 49 53   405 	.ascii "WE WISH YOU A MERRY CHRISTMAS WE WISH YOU A MERRY CHRISTMAS "
        48 20 59 4F 55 20
        41 20 4D 45 52 52
        59 20 43 48 52 49
        53 54 4D 41 53 20
        57 45 20 57 49 53
        48 20 59 4F 55 20
        41 20 4D 45 52 52
        59 20 43 48 52 49
        53 54 4D 41 53 20
   0209 41 4E 44 20 41 20   406 	.ascii "AND A HAPPY NEW YEAR FROM THSF AND TETALAB      AZERTYUIOPQS"
        48 41 50 50 59 20
        4E 45 57 20 59 45
        41 52 20 46 52 4F
        4D 20 54 48 53 46
        20 41 4E 44 20 54
        45 54 41 4C 41 42
        20 20 20 20 20 20
        41 5A 45 52 54 59
        55 49 4F 50 51 53
   0245 44 46 47 20 20 20   407 	.ascii "DFG     "
        20 20
   024D 00                  408 	.db 0x00
   024E 00                  409 	.db 0x00
                            410 	.area _CODE
                            411 	.area _INITIALIZER
   0000                     412 __xinit__firstPlotScreen2:
   0000 01                  413 	.db #0x01	; 1
                            414 	.area _CABS (ABS)
