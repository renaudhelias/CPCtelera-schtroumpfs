                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.8 #9946 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module txt_scroll_hard
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _scroll_hard
                             12 	.globl _cpct_getScreenPtr
                             13 	.globl _cpct_drawTileAligned2x8
                             14 	.globl _texte
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 ;--------------------------------------------------------
                             19 ; ram data
                             20 ;--------------------------------------------------------
                             21 	.area _DATA
                             22 ;--------------------------------------------------------
                             23 ; ram data
                             24 ;--------------------------------------------------------
                             25 	.area _INITIALIZED
                             26 ;--------------------------------------------------------
                             27 ; absolute external ram data
                             28 ;--------------------------------------------------------
                             29 	.area _DABS (ABS)
                             30 ;--------------------------------------------------------
                             31 ; global & static initialisations
                             32 ;--------------------------------------------------------
                             33 	.area _HOME
                             34 	.area _GSINIT
                             35 	.area _GSFINAL
                             36 	.area _GSINIT
                             37 ;--------------------------------------------------------
                             38 ; Home
                             39 ;--------------------------------------------------------
                             40 	.area _HOME
                             41 	.area _HOME
                             42 ;--------------------------------------------------------
                             43 ; code
                             44 ;--------------------------------------------------------
                             45 	.area _CODE
                             46 ;src/txt_scroll_hard.c:14: void scroll_hard(int step, u8* screen_plot_address) {
                             47 ;	---------------------------------
                             48 ; Function scroll_hard
                             49 ; ---------------------------------
   0000                      50 _scroll_hard::
   0000 DD E5         [15]   51 	push	ix
   0002 DD 21 00 00   [14]   52 	ld	ix,#0
   0006 DD 39         [15]   53 	add	ix,sp
   0008 F5            [11]   54 	push	af
                             55 ;src/txt_scroll_hard.c:20: u8* plot=screen_plot_address;
   0009 DD 7E 06      [19]   56 	ld	a, 6 (ix)
   000C DD 77 FE      [19]   57 	ld	-2 (ix), a
   000F DD 7E 07      [19]   58 	ld	a, 7 (ix)
   0012 DD 77 FF      [19]   59 	ld	-1 (ix), a
                             60 ;src/txt_scroll_hard.c:23: div=step/8;
   0015 DD 6E 04      [19]   61 	ld	l,4 (ix)
   0018 DD 66 05      [19]   62 	ld	h,5 (ix)
   001B CB 7C         [ 8]   63 	bit	7, h
   001D 28 04         [12]   64 	jr	Z,00106$
   001F 01 07 00      [10]   65 	ld	bc, #0x0007
   0022 09            [11]   66 	add	hl, bc
   0023                      67 00106$:
   0023 CB 3C         [ 8]   68 	srl	h
   0025 CB 1D         [ 8]   69 	rr	l
   0027 CB 3C         [ 8]   70 	srl	h
   0029 CB 1D         [ 8]   71 	rr	l
   002B CB 3C         [ 8]   72 	srl	h
   002D CB 1D         [ 8]   73 	rr	l
                             74 ;src/txt_scroll_hard.c:24: mod=step%8;
   002F E5            [11]   75 	push	hl
   0030 01 08 00      [10]   76 	ld	bc, #0x0008
   0033 C5            [11]   77 	push	bc
   0034 DD 4E 04      [19]   78 	ld	c,4 (ix)
   0037 DD 46 05      [19]   79 	ld	b,5 (ix)
   003A C5            [11]   80 	push	bc
   003B CDr00r00      [17]   81 	call	__modsint
   003E F1            [10]   82 	pop	af
   003F F1            [10]   83 	pop	af
   0040 4D            [ 4]   84 	ld	c, l
   0041 44            [ 4]   85 	ld	b, h
   0042 E1            [10]   86 	pop	hl
                             87 ;src/txt_scroll_hard.c:25: div=div%128;
   0043 CB BD         [ 8]   88 	res	7, l
   0045 26 00         [ 7]   89 	ld	h, #0x00
                             90 ;src/txt_scroll_hard.c:26: if (texte[div]==' ') {
   0047 11rE1r00      [10]   91 	ld	de, #_texte+0
   004A 19            [11]   92 	add	hl, de
   004B 5E            [ 7]   93 	ld	e, (hl)
   004C 7B            [ 4]   94 	ld	a, e
   004D D6 20         [ 7]   95 	sub	a, #0x20
   004F 20 05         [12]   96 	jr	NZ,00102$
                             97 ;src/txt_scroll_hard.c:27: o=0;
   0051 11 00 00      [10]   98 	ld	de, #0x0000
   0054 18 09         [12]   99 	jr	00103$
   0056                     100 00102$:
                            101 ;src/txt_scroll_hard.c:29: o=texte[div]-'?';
   0056 16 00         [ 7]  102 	ld	d, #0x00
   0058 7B            [ 4]  103 	ld	a, e
   0059 C6 C1         [ 7]  104 	add	a, #0xc1
   005B 5F            [ 4]  105 	ld	e, a
   005C 7A            [ 4]  106 	ld	a, d
   005D CE FF         [ 7]  107 	adc	a, #0xff
   005F                     108 00103$:
                            109 ;src/txt_scroll_hard.c:32: pointeur=(u16)g_tile_fontmap32x32plat_000+o*8*(32*2)+mod*(32*2);
   005F 21r00r00      [10]  110 	ld	hl, #_g_tile_fontmap32x32plat_000
   0062 7B            [ 4]  111 	ld	a, e
   0063 87            [ 4]  112 	add	a, a
   0064 57            [ 4]  113 	ld	d, a
   0065 1E 00         [ 7]  114 	ld	e, #0x00
   0067 19            [11]  115 	add	hl,de
   0068 EB            [ 4]  116 	ex	de,hl
   0069 69            [ 4]  117 	ld	l, c
   006A 60            [ 4]  118 	ld	h, b
   006B 29            [11]  119 	add	hl, hl
   006C 29            [11]  120 	add	hl, hl
   006D 29            [11]  121 	add	hl, hl
   006E 29            [11]  122 	add	hl, hl
   006F 29            [11]  123 	add	hl, hl
   0070 29            [11]  124 	add	hl, hl
   0071 19            [11]  125 	add	hl,de
   0072 EB            [ 4]  126 	ex	de,hl
                            127 ;src/txt_scroll_hard.c:36: p = cpct_getScreenPtr(plot, 0,0);
   0073 C1            [10]  128 	pop	bc
   0074 C5            [11]  129 	push	bc
   0075 C5            [11]  130 	push	bc
   0076 D5            [11]  131 	push	de
   0077 21 00 00      [10]  132 	ld	hl, #0x0000
   007A E5            [11]  133 	push	hl
   007B C5            [11]  134 	push	bc
   007C CDr00r00      [17]  135 	call	_cpct_getScreenPtr
   007F D1            [10]  136 	pop	de
   0080 C1            [10]  137 	pop	bc
                            138 ;src/txt_scroll_hard.c:37: cpct_drawTileAligned2x8((u8*)pointeur, p);
   0081 D5            [11]  139 	push	de
   0082 FD E1         [14]  140 	pop	iy
   0084 C5            [11]  141 	push	bc
   0085 D5            [11]  142 	push	de
   0086 E5            [11]  143 	push	hl
   0087 FD E5         [15]  144 	push	iy
   0089 CDr00r00      [17]  145 	call	_cpct_drawTileAligned2x8
   008C D1            [10]  146 	pop	de
   008D C1            [10]  147 	pop	bc
                            148 ;src/txt_scroll_hard.c:38: p = cpct_getScreenPtr(plot, 0,8);
   008E C5            [11]  149 	push	bc
   008F D5            [11]  150 	push	de
   0090 21 00 08      [10]  151 	ld	hl, #0x0800
   0093 E5            [11]  152 	push	hl
   0094 C5            [11]  153 	push	bc
   0095 CDr00r00      [17]  154 	call	_cpct_getScreenPtr
   0098 D1            [10]  155 	pop	de
   0099 C1            [10]  156 	pop	bc
                            157 ;src/txt_scroll_hard.c:39: cpct_drawTileAligned2x8((u8*)pointeur+(2*8), p);
   009A FD 21 10 00   [14]  158 	ld	iy, #0x0010
   009E FD 19         [15]  159 	add	iy, de
   00A0 C5            [11]  160 	push	bc
   00A1 D5            [11]  161 	push	de
   00A2 E5            [11]  162 	push	hl
   00A3 FD E5         [15]  163 	push	iy
   00A5 CDr00r00      [17]  164 	call	_cpct_drawTileAligned2x8
   00A8 D1            [10]  165 	pop	de
   00A9 C1            [10]  166 	pop	bc
                            167 ;src/txt_scroll_hard.c:40: p = cpct_getScreenPtr(plot, 0,16);
   00AA C5            [11]  168 	push	bc
   00AB D5            [11]  169 	push	de
   00AC 21 00 10      [10]  170 	ld	hl, #0x1000
   00AF E5            [11]  171 	push	hl
   00B0 C5            [11]  172 	push	bc
   00B1 CDr00r00      [17]  173 	call	_cpct_getScreenPtr
   00B4 D1            [10]  174 	pop	de
   00B5 C1            [10]  175 	pop	bc
                            176 ;src/txt_scroll_hard.c:41: cpct_drawTileAligned2x8((u8*)pointeur+(4*8), p);
   00B6 E5            [11]  177 	push	hl
   00B7 FD E1         [14]  178 	pop	iy
   00B9 21 20 00      [10]  179 	ld	hl, #0x0020
   00BC 19            [11]  180 	add	hl, de
   00BD C5            [11]  181 	push	bc
   00BE D5            [11]  182 	push	de
   00BF FD E5         [15]  183 	push	iy
   00C1 E5            [11]  184 	push	hl
   00C2 CDr00r00      [17]  185 	call	_cpct_drawTileAligned2x8
   00C5 D1            [10]  186 	pop	de
   00C6 C1            [10]  187 	pop	bc
                            188 ;src/txt_scroll_hard.c:42: p = cpct_getScreenPtr(plot, 0,24);
   00C7 D5            [11]  189 	push	de
   00C8 21 00 18      [10]  190 	ld	hl, #0x1800
   00CB E5            [11]  191 	push	hl
   00CC C5            [11]  192 	push	bc
   00CD CDr00r00      [17]  193 	call	_cpct_getScreenPtr
   00D0 4D            [ 4]  194 	ld	c, l
   00D1 44            [ 4]  195 	ld	b, h
   00D2 D1            [10]  196 	pop	de
                            197 ;src/txt_scroll_hard.c:43: cpct_drawTileAligned2x8((u8*)pointeur+(6*8), p);
   00D3 21 30 00      [10]  198 	ld	hl, #0x0030
   00D6 19            [11]  199 	add	hl, de
   00D7 C5            [11]  200 	push	bc
   00D8 E5            [11]  201 	push	hl
   00D9 CDr00r00      [17]  202 	call	_cpct_drawTileAligned2x8
   00DC DD F9         [10]  203 	ld	sp, ix
   00DE DD E1         [14]  204 	pop	ix
   00E0 C9            [10]  205 	ret
   00E1                     206 _texte:
   00E1 57 45 20 57 49 53   207 	.ascii "WE WISH YOU A MERRY CHRISTMAS WE WISH YOU A MERRY CHRISTMAS "
        48 20 59 4F 55 20
        41 20 4D 45 52 52
        59 20 43 48 52 49
        53 54 4D 41 53 20
        57 45 20 57 49 53
        48 20 59 4F 55 20
        41 20 4D 45 52 52
        59 20 43 48 52 49
        53 54 4D 41 53 20
   011D 41 4E 44 20 41 20   208 	.ascii "AND A HAPPY NEW YEAR FROM THSF AND TETALAB   AZERTYUIOPQSDFG"
        48 41 50 50 59 20
        4E 45 57 20 59 45
        41 52 20 46 52 4F
        4D 20 54 48 53 46
        20 41 4E 44 20 54
        45 54 41 4C 41 42
        20 20 20 41 5A 45
        52 54 59 55 49 4F
        50 51 53 44 46 47
   0159 48 20 20 20 20 20   209 	.ascii "H       "
        20 20
   0161 00                  210 	.db 0x00
                            211 	.area _CODE
                            212 	.area _INITIALIZER
                            213 	.area _CABS (ABS)
