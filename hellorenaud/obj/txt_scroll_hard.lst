                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.8 #9946 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module txt_scroll_hard
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _scroll_hard
                             12 	.globl _draw_char
                             13 	.globl _cpct_getScreenPtr
                             14 	.globl _cpct_drawSolidBox
                             15 	.globl _cpct_drawTileAligned2x8_f
                             16 	.globl _firstPlotScreen2
                             17 	.globl _c_screen3
                             18 	.globl _plot_screen2
                             19 	.globl _texte
                             20 ;--------------------------------------------------------
                             21 ; special function registers
                             22 ;--------------------------------------------------------
                             23 ;--------------------------------------------------------
                             24 ; ram data
                             25 ;--------------------------------------------------------
                             26 	.area _DATA
   0000                      27 _plot_screen2::
   0000                      28 	.ds 2
   0002                      29 _c_screen3::
   0002                      30 	.ds 1
                             31 ;--------------------------------------------------------
                             32 ; ram data
                             33 ;--------------------------------------------------------
                             34 	.area _INITIALIZED
   0000                      35 _firstPlotScreen2::
   0000                      36 	.ds 1
                             37 ;--------------------------------------------------------
                             38 ; absolute external ram data
                             39 ;--------------------------------------------------------
                             40 	.area _DABS (ABS)
                             41 ;--------------------------------------------------------
                             42 ; global & static initialisations
                             43 ;--------------------------------------------------------
                             44 	.area _HOME
                             45 	.area _GSINIT
                             46 	.area _GSFINAL
                             47 	.area _GSINIT
                             48 ;--------------------------------------------------------
                             49 ; Home
                             50 ;--------------------------------------------------------
                             51 	.area _HOME
                             52 	.area _HOME
                             53 ;--------------------------------------------------------
                             54 ; code
                             55 ;--------------------------------------------------------
                             56 	.area _CODE
                             57 ;src/txt_scroll_hard.c:16: u8 draw_char(u8 c, u8 ce2, u8* image, u8* plot) {
                             58 ;	---------------------------------
                             59 ; Function draw_char
                             60 ; ---------------------------------
   0000                      61 _draw_char::
   0000 DD E5         [15]   62 	push	ix
   0002 DD 21 00 00   [14]   63 	ld	ix,#0
   0006 DD 39         [15]   64 	add	ix,sp
   0008 F5            [11]   65 	push	af
                             66 ;src/txt_scroll_hard.c:24: u8 c_screen2=ce2;
   0009 DD 4E 05      [19]   67 	ld	c, 5 (ix)
                             68 ;src/txt_scroll_hard.c:25: last_plot=plot+ 0x4000 +80u*c+ 0x3801;
   000C DD 5E 04      [19]   69 	ld	e, 4 (ix)
   000F 16 00         [ 7]   70 	ld	d, #0x00
   0011 6B            [ 4]   71 	ld	l, e
   0012 62            [ 4]   72 	ld	h, d
   0013 29            [11]   73 	add	hl, hl
   0014 29            [11]   74 	add	hl, hl
   0015 19            [11]   75 	add	hl, de
   0016 29            [11]   76 	add	hl, hl
   0017 29            [11]   77 	add	hl, hl
   0018 29            [11]   78 	add	hl, hl
   0019 29            [11]   79 	add	hl, hl
   001A EB            [ 4]   80 	ex	de,hl
   001B 21 01 78      [10]   81 	ld	hl, #0x7801
   001E 19            [11]   82 	add	hl,de
   001F EB            [ 4]   83 	ex	de,hl
   0020 DD 6E 08      [19]   84 	ld	l,8 (ix)
   0023 DD 66 09      [19]   85 	ld	h,9 (ix)
   0026 19            [11]   86 	add	hl, de
                             87 ;src/txt_scroll_hard.c:27: if (last_plot<0x4000) {
   0027 33            [ 6]   88 	inc	sp
   0028 33            [ 6]   89 	inc	sp
   0029 E5            [11]   90 	push	hl
                             91 ;src/txt_scroll_hard.c:53: cpct_drawTileAligned2x8_f((u8*)image+(2*8)*c, p);
   002A DD 6E 04      [19]   92 	ld	l, 4 (ix)
   002D 26 00         [ 7]   93 	ld	h, #0x00
   002F 29            [11]   94 	add	hl, hl
   0030 29            [11]   95 	add	hl, hl
   0031 29            [11]   96 	add	hl, hl
   0032 29            [11]   97 	add	hl, hl
   0033 EB            [ 4]   98 	ex	de,hl
   0034 DD 6E 06      [19]   99 	ld	l,6 (ix)
   0037 DD 66 07      [19]  100 	ld	h,7 (ix)
   003A 19            [11]  101 	add	hl, de
   003B EB            [ 4]  102 	ex	de,hl
                            103 ;src/txt_scroll_hard.c:27: if (last_plot<0x4000) {
   003C DD 7E FF      [19]  104 	ld	a, -1 (ix)
   003F D6 40         [ 7]  105 	sub	a, #0x40
   0041 D2rE8r00      [10]  106 	jp	NC, 00118$
                            107 ;src/txt_scroll_hard.c:29: c_screen3=c;
   0044 DD 46 04      [19]  108 	ld	b, 4 (ix)
                            109 ;src/txt_scroll_hard.c:28: if (c<c_screen3) {
   0047 21r02r00      [10]  110 	ld	hl, #_c_screen3
   004A DD 7E 04      [19]  111 	ld	a, 4 (ix)
   004D 96            [ 7]  112 	sub	a, (hl)
   004E 30 0A         [12]  113 	jr	NC,00102$
                            114 ;src/txt_scroll_hard.c:29: c_screen3=c;
   0050 21r02r00      [10]  115 	ld	hl,#_c_screen3 + 0
   0053 70            [ 7]  116 	ld	(hl), b
                            117 ;src/txt_scroll_hard.c:30: plot_screen2=0x8000;
   0054 21 00 80      [10]  118 	ld	hl, #0x8000
   0057 22r00r00      [16]  119 	ld	(_plot_screen2), hl
   005A                     120 00102$:
                            121 ;src/txt_scroll_hard.c:32: if (c<c_screen2) {
   005A DD 7E 04      [19]  122 	ld	a, 4 (ix)
   005D 91            [ 4]  123 	sub	a, c
   005E 30 01         [12]  124 	jr	NC,00104$
                            125 ;src/txt_scroll_hard.c:33: c_screen2=c;
   0060 48            [ 4]  126 	ld	c, b
   0061                     127 00104$:
                            128 ;src/txt_scroll_hard.c:51: p = cpct_getScreenPtr(plot_screen2+0x4000, 0,8*(c-c_screen2));
   0061 DD 7E 04      [19]  129 	ld	a, 4 (ix)
   0064 91            [ 4]  130 	sub	a, c
   0065 07            [ 4]  131 	rlca
   0066 07            [ 4]  132 	rlca
   0067 07            [ 4]  133 	rlca
   0068 E6 F8         [ 7]  134 	and	a, #0xf8
   006A 47            [ 4]  135 	ld	b, a
   006B FD 21 00 40   [14]  136 	ld	iy, #0x4000
   006F C5            [11]  137 	push	bc
   0070 ED 4Br00r00   [20]  138 	ld	bc, (_plot_screen2)
   0074 FD 09         [15]  139 	add	iy, bc
   0076 C1            [10]  140 	pop	bc
   0077 C5            [11]  141 	push	bc
   0078 D5            [11]  142 	push	de
   0079 C5            [11]  143 	push	bc
   007A 33            [ 6]  144 	inc	sp
   007B AF            [ 4]  145 	xor	a, a
   007C F5            [11]  146 	push	af
   007D 33            [ 6]  147 	inc	sp
   007E FD E5         [15]  148 	push	iy
   0080 CDr00r00      [17]  149 	call	_cpct_getScreenPtr
   0083 D1            [10]  150 	pop	de
   0084 C1            [10]  151 	pop	bc
                            152 ;src/txt_scroll_hard.c:52: if (c_screen2==3 && c==3) {
   0085 DD 7E 04      [19]  153 	ld	a, 4 (ix)
   0088 D6 03         [ 7]  154 	sub	a, #0x03
   008A 20 04         [12]  155 	jr	NZ,00158$
   008C 3E 01         [ 7]  156 	ld	a,#0x01
   008E 18 01         [12]  157 	jr	00159$
   0090                     158 00158$:
   0090 AF            [ 4]  159 	xor	a,a
   0091                     160 00159$:
   0091 47            [ 4]  161 	ld	b, a
                            162 ;src/txt_scroll_hard.c:53: cpct_drawTileAligned2x8_f((u8*)image+(2*8)*c, p);
                            163 ;src/txt_scroll_hard.c:52: if (c_screen2==3 && c==3) {
   0092 79            [ 4]  164 	ld	a, c
   0093 D6 03         [ 7]  165 	sub	a,#0x03
   0095 20 0C         [12]  166 	jr	NZ,00114$
   0097 B0            [ 4]  167 	or	a,b
   0098 28 09         [12]  168 	jr	Z,00114$
                            169 ;src/txt_scroll_hard.c:53: cpct_drawTileAligned2x8_f((u8*)image+(2*8)*c, p);
   009A C5            [11]  170 	push	bc
   009B E5            [11]  171 	push	hl
   009C D5            [11]  172 	push	de
   009D CDr00r00      [17]  173 	call	_cpct_drawTileAligned2x8_f
   00A0 C1            [10]  174 	pop	bc
   00A1 18 6D         [12]  175 	jr	00119$
   00A3                     176 00114$:
                            177 ;src/txt_scroll_hard.c:54: } else if (c_screen2==2 && c==2) { // le "suivant" en bas, donc 0 1
   00A3 79            [ 4]  178 	ld	a, c
   00A4 D6 02         [ 7]  179 	sub	a, #0x02
   00A6 20 04         [12]  180 	jr	NZ,00162$
   00A8 3E 01         [ 7]  181 	ld	a,#0x01
   00AA 18 01         [12]  182 	jr	00163$
   00AC                     183 00162$:
   00AC AF            [ 4]  184 	xor	a,a
   00AD                     185 00163$:
   00AD DD 77 FE      [19]  186 	ld	-2 (ix), a
   00B0 B7            [ 4]  187 	or	a, a
   00B1 28 10         [12]  188 	jr	Z,00110$
   00B3 DD 7E 04      [19]  189 	ld	a, 4 (ix)
   00B6 D6 02         [ 7]  190 	sub	a, #0x02
   00B8 20 09         [12]  191 	jr	NZ,00110$
                            192 ;src/txt_scroll_hard.c:57: cpct_drawTileAligned2x8_f((u8*)image+(2*8)*c, p);
   00BA C5            [11]  193 	push	bc
   00BB E5            [11]  194 	push	hl
   00BC D5            [11]  195 	push	de
   00BD CDr00r00      [17]  196 	call	_cpct_drawTileAligned2x8_f
   00C0 C1            [10]  197 	pop	bc
   00C1 18 4D         [12]  198 	jr	00119$
   00C3                     199 00110$:
                            200 ;src/txt_scroll_hard.c:58: } else if (c_screen2==2 && c==3) { // le "suivant" en bas, donc 0 1
   00C3 DD 7E FE      [19]  201 	ld	a, -2 (ix)
   00C6 B7            [ 4]  202 	or	a, a
   00C7 28 0D         [12]  203 	jr	Z,00106$
   00C9 78            [ 4]  204 	ld	a, b
   00CA B7            [ 4]  205 	or	a, a
   00CB 28 09         [12]  206 	jr	Z,00106$
                            207 ;src/txt_scroll_hard.c:61: cpct_drawTileAligned2x8_f((u8*)image+(2*8)*c, p);
   00CD C5            [11]  208 	push	bc
   00CE E5            [11]  209 	push	hl
   00CF D5            [11]  210 	push	de
   00D0 CDr00r00      [17]  211 	call	_cpct_drawTileAligned2x8_f
   00D3 C1            [10]  212 	pop	bc
   00D4 18 3A         [12]  213 	jr	00119$
   00D6                     214 00106$:
                            215 ;src/txt_scroll_hard.c:63: cpct_drawSolidBox(p,c_screen2,2,8);
   00D6 C5            [11]  216 	push	bc
   00D7 11 02 08      [10]  217 	ld	de, #0x0802
   00DA D5            [11]  218 	push	de
   00DB 79            [ 4]  219 	ld	a, c
   00DC F5            [11]  220 	push	af
   00DD 33            [ 6]  221 	inc	sp
   00DE E5            [11]  222 	push	hl
   00DF CDr00r00      [17]  223 	call	_cpct_drawSolidBox
   00E2 F1            [10]  224 	pop	af
   00E3 F1            [10]  225 	pop	af
   00E4 33            [ 6]  226 	inc	sp
   00E5 C1            [10]  227 	pop	bc
   00E6 18 28         [12]  228 	jr	00119$
   00E8                     229 00118$:
                            230 ;src/txt_scroll_hard.c:85: p = cpct_getScreenPtr(plot+0x4000, 0,8*c);
   00E8 DD 7E 04      [19]  231 	ld	a, 4 (ix)
   00EB 07            [ 4]  232 	rlca
   00EC 07            [ 4]  233 	rlca
   00ED 07            [ 4]  234 	rlca
   00EE E6 F8         [ 7]  235 	and	a, #0xf8
   00F0 67            [ 4]  236 	ld	h, a
   00F1 DD 7E 08      [19]  237 	ld	a, 8 (ix)
   00F4 C6 00         [ 7]  238 	add	a, #0x00
   00F6 6F            [ 4]  239 	ld	l, a
   00F7 DD 7E 09      [19]  240 	ld	a, 9 (ix)
   00FA CE 40         [ 7]  241 	adc	a, #0x40
   00FC 47            [ 4]  242 	ld	b, a
   00FD C5            [11]  243 	push	bc
   00FE D5            [11]  244 	push	de
   00FF E5            [11]  245 	push	hl
   0100 33            [ 6]  246 	inc	sp
   0101 AF            [ 4]  247 	xor	a, a
   0102 F5            [11]  248 	push	af
   0103 33            [ 6]  249 	inc	sp
   0104 60            [ 4]  250 	ld	h, b
   0105 E5            [11]  251 	push	hl
   0106 CDr00r00      [17]  252 	call	_cpct_getScreenPtr
   0109 D1            [10]  253 	pop	de
   010A E5            [11]  254 	push	hl
   010B D5            [11]  255 	push	de
   010C CDr00r00      [17]  256 	call	_cpct_drawTileAligned2x8_f
   010F C1            [10]  257 	pop	bc
   0110                     258 00119$:
                            259 ;src/txt_scroll_hard.c:88: return c_screen2;
   0110 69            [ 4]  260 	ld	l, c
   0111 DD F9         [10]  261 	ld	sp, ix
   0113 DD E1         [14]  262 	pop	ix
   0115 C9            [10]  263 	ret
                            264 ;src/txt_scroll_hard.c:99: void scroll_hard(u16 step, u8* screen_plot_address) {
                            265 ;	---------------------------------
                            266 ; Function scroll_hard
                            267 ; ---------------------------------
   0116                     268 _scroll_hard::
   0116 DD E5         [15]  269 	push	ix
   0118 DD 21 00 00   [14]  270 	ld	ix,#0
   011C DD 39         [15]  271 	add	ix,sp
   011E F5            [11]  272 	push	af
                            273 ;src/txt_scroll_hard.c:106: u8* plot=screen_plot_address;
   011F DD 4E 06      [19]  274 	ld	c,6 (ix)
   0122 DD 46 07      [19]  275 	ld	b,7 (ix)
                            276 ;src/txt_scroll_hard.c:110: div=step/8;
   0125 DD 5E 04      [19]  277 	ld	e,4 (ix)
   0128 DD 56 05      [19]  278 	ld	d,5 (ix)
   012B CB 3A         [ 8]  279 	srl	d
   012D CB 1B         [ 8]  280 	rr	e
   012F CB 3A         [ 8]  281 	srl	d
   0131 CB 1B         [ 8]  282 	rr	e
   0133 CB 3A         [ 8]  283 	srl	d
   0135 CB 1B         [ 8]  284 	rr	e
                            285 ;src/txt_scroll_hard.c:111: mod=step%8;
   0137 DD 7E 04      [19]  286 	ld	a, 4 (ix)
   013A E6 07         [ 7]  287 	and	a, #0x07
   013C DD 77 FE      [19]  288 	ld	-2 (ix), a
   013F DD 36 FF 00   [19]  289 	ld	-1 (ix), #0x00
                            290 ;src/txt_scroll_hard.c:112: div=div%128;
   0143 CB BB         [ 8]  291 	res	7, e
   0145 16 00         [ 7]  292 	ld	d, #0x00
                            293 ;src/txt_scroll_hard.c:113: if (texte[div]==' ') {
   0147 21rE5r01      [10]  294 	ld	hl, #_texte+0
   014A 19            [11]  295 	add	hl, de
   014B 5E            [ 7]  296 	ld	e, (hl)
   014C 7B            [ 4]  297 	ld	a, e
   014D D6 20         [ 7]  298 	sub	a, #0x20
   014F 20 05         [12]  299 	jr	NZ,00102$
                            300 ;src/txt_scroll_hard.c:114: o=0;
   0151 11 00 00      [10]  301 	ld	de, #0x0000
   0154 18 09         [12]  302 	jr	00103$
   0156                     303 00102$:
                            304 ;src/txt_scroll_hard.c:116: o=texte[div]-'?';
   0156 16 00         [ 7]  305 	ld	d, #0x00
   0158 7B            [ 4]  306 	ld	a, e
   0159 C6 C1         [ 7]  307 	add	a, #0xc1
   015B 5F            [ 4]  308 	ld	e, a
   015C 7A            [ 4]  309 	ld	a, d
   015D CE FF         [ 7]  310 	adc	a, #0xff
   015F                     311 00103$:
                            312 ;src/txt_scroll_hard.c:119: pointeur=(u16)g_tile_fontmap32x32plat_000+o*8*(32*2)+mod*(32*2);
   015F 21r00r00      [10]  313 	ld	hl, #_g_tile_fontmap32x32plat_000
   0162 7B            [ 4]  314 	ld	a, e
   0163 87            [ 4]  315 	add	a, a
   0164 57            [ 4]  316 	ld	d, a
   0165 1E 00         [ 7]  317 	ld	e, #0x00
   0167 19            [11]  318 	add	hl,de
   0168 EB            [ 4]  319 	ex	de,hl
   0169 E1            [10]  320 	pop	hl
   016A E5            [11]  321 	push	hl
   016B 29            [11]  322 	add	hl, hl
   016C 29            [11]  323 	add	hl, hl
   016D 29            [11]  324 	add	hl, hl
   016E 29            [11]  325 	add	hl, hl
   016F 29            [11]  326 	add	hl, hl
   0170 29            [11]  327 	add	hl, hl
   0171 19            [11]  328 	add	hl,de
   0172 EB            [ 4]  329 	ex	de,hl
                            330 ;src/txt_scroll_hard.c:123: ce2=draw_char(0,4,(u8*)pointeur, plot);
   0173 C5            [11]  331 	push	bc
   0174 D5            [11]  332 	push	de
   0175 C5            [11]  333 	push	bc
   0176 D5            [11]  334 	push	de
   0177 21 00 04      [10]  335 	ld	hl, #0x0400
   017A E5            [11]  336 	push	hl
   017B CDr00r00      [17]  337 	call	_draw_char
   017E F1            [10]  338 	pop	af
   017F F1            [10]  339 	pop	af
   0180 F1            [10]  340 	pop	af
   0181 D1            [10]  341 	pop	de
   0182 C1            [10]  342 	pop	bc
   0183 65            [ 4]  343 	ld	h, l
                            344 ;src/txt_scroll_hard.c:124: ce2=draw_char(1,ce2,(u8*)pointeur, plot);
   0184 C5            [11]  345 	push	bc
   0185 D5            [11]  346 	push	de
   0186 C5            [11]  347 	push	bc
   0187 D5            [11]  348 	push	de
   0188 E5            [11]  349 	push	hl
   0189 33            [ 6]  350 	inc	sp
   018A 3E 01         [ 7]  351 	ld	a, #0x01
   018C F5            [11]  352 	push	af
   018D 33            [ 6]  353 	inc	sp
   018E CDr00r00      [17]  354 	call	_draw_char
   0191 F1            [10]  355 	pop	af
   0192 F1            [10]  356 	pop	af
   0193 F1            [10]  357 	pop	af
   0194 D1            [10]  358 	pop	de
   0195 C1            [10]  359 	pop	bc
   0196 65            [ 4]  360 	ld	h, l
                            361 ;src/txt_scroll_hard.c:125: ce2=draw_char(2,ce2,(u8*)pointeur, plot);
   0197 C5            [11]  362 	push	bc
   0198 D5            [11]  363 	push	de
   0199 C5            [11]  364 	push	bc
   019A D5            [11]  365 	push	de
   019B E5            [11]  366 	push	hl
   019C 33            [ 6]  367 	inc	sp
   019D 3E 02         [ 7]  368 	ld	a, #0x02
   019F F5            [11]  369 	push	af
   01A0 33            [ 6]  370 	inc	sp
   01A1 CDr00r00      [17]  371 	call	_draw_char
   01A4 F1            [10]  372 	pop	af
   01A5 F1            [10]  373 	pop	af
   01A6 F1            [10]  374 	pop	af
   01A7 D1            [10]  375 	pop	de
   01A8 C1            [10]  376 	pop	bc
   01A9 65            [ 4]  377 	ld	h, l
                            378 ;src/txt_scroll_hard.c:126: ce2=draw_char(3,ce2,(u8*)pointeur, plot);
   01AA C5            [11]  379 	push	bc
   01AB D5            [11]  380 	push	de
   01AC E5            [11]  381 	push	hl
   01AD 33            [ 6]  382 	inc	sp
   01AE 3E 03         [ 7]  383 	ld	a, #0x03
   01B0 F5            [11]  384 	push	af
   01B1 33            [ 6]  385 	inc	sp
   01B2 CDr00r00      [17]  386 	call	_draw_char
   01B5 F1            [10]  387 	pop	af
   01B6 F1            [10]  388 	pop	af
   01B7 F1            [10]  389 	pop	af
                            390 ;src/txt_scroll_hard.c:127: if (ce2==4) {
   01B8 7D            [ 4]  391 	ld	a, l
   01B9 D6 04         [ 7]  392 	sub	a, #0x04
   01BB 20 0D         [12]  393 	jr	NZ,00105$
                            394 ;src/txt_scroll_hard.c:129: plot_screen2=0x8000;
   01BD 21 00 80      [10]  395 	ld	hl, #0x8000
   01C0 22r00r00      [16]  396 	ld	(_plot_screen2), hl
                            397 ;src/txt_scroll_hard.c:130: c_screen3=4;
   01C3 21r02r00      [10]  398 	ld	hl,#_c_screen3 + 0
   01C6 36 04         [10]  399 	ld	(hl), #0x04
   01C8 18 16         [12]  400 	jr	00107$
   01CA                     401 00105$:
                            402 ;src/txt_scroll_hard.c:132: plot_screen2+=2;
   01CA 21r00r00      [10]  403 	ld	hl, #_plot_screen2
   01CD 7E            [ 7]  404 	ld	a, (hl)
   01CE C6 02         [ 7]  405 	add	a, #0x02
   01D0 77            [ 7]  406 	ld	(hl), a
   01D1 23            [ 6]  407 	inc	hl
   01D2 7E            [ 7]  408 	ld	a, (hl)
   01D3 CE 00         [ 7]  409 	adc	a, #0x00
   01D5 77            [ 7]  410 	ld	(hl), a
                            411 ;src/txt_scroll_hard.c:133: plot_screen2=(u8 *)(((u16)plot_screen2) & 0x87FF);
   01D6 2Ar00r00      [16]  412 	ld	hl, (_plot_screen2)
   01D9 7C            [ 4]  413 	ld	a, h
   01DA E6 87         [ 7]  414 	and	a, #0x87
   01DC 67            [ 4]  415 	ld	h, a
   01DD 22r00r00      [16]  416 	ld	(_plot_screen2), hl
   01E0                     417 00107$:
   01E0 DD F9         [10]  418 	ld	sp, ix
   01E2 DD E1         [14]  419 	pop	ix
   01E4 C9            [10]  420 	ret
   01E5                     421 _texte:
   01E5 57 45 20 57 49 53   422 	.ascii "WE WISH YOU A MERRY CHRISTMAS WE WISH YOU A MERRY CHRISTMAS "
        48 20 59 4F 55 20
        41 20 4D 45 52 52
        59 20 43 48 52 49
        53 54 4D 41 53 20
        57 45 20 57 49 53
        48 20 59 4F 55 20
        41 20 4D 45 52 52
        59 20 43 48 52 49
        53 54 4D 41 53 20
   0221 41 4E 44 20 41 20   423 	.ascii "AND A HAPPY NEW YEAR FROM THSF AND TETALAB      AZERTYUIOPQS"
        48 41 50 50 59 20
        4E 45 57 20 59 45
        41 52 20 46 52 4F
        4D 20 54 48 53 46
        20 41 4E 44 20 54
        45 54 41 4C 41 42
        20 20 20 20 20 20
        41 5A 45 52 54 59
        55 49 4F 50 51 53
   025D 44 46 47 20 20 20   424 	.ascii "DFG     "
        20 20
   0265 00                  425 	.db 0x00
   0266 00                  426 	.db 0x00
                            427 	.area _CODE
                            428 	.area _INITIALIZER
   0000                     429 __xinit__firstPlotScreen2:
   0000 01                  430 	.db #0x01	; 1
                            431 	.area _CABS (ABS)
