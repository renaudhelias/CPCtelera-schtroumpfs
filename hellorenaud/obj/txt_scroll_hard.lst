                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.8 #9946 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module txt_scroll_hard
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _scroll_hard
                             12 	.globl _cpct_drawSprite
                             13 	.globl _texte
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _INITIALIZED
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area _DABS (ABS)
                             29 ;--------------------------------------------------------
                             30 ; global & static initialisations
                             31 ;--------------------------------------------------------
                             32 	.area _HOME
                             33 	.area _GSINIT
                             34 	.area _GSFINAL
                             35 	.area _GSINIT
                             36 ;--------------------------------------------------------
                             37 ; Home
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _HOME
                             41 ;--------------------------------------------------------
                             42 ; code
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 ;src/txt_scroll_hard.c:14: void scroll_hard(int step, u8* screen_plot_address) {
                             46 ;	---------------------------------
                             47 ; Function scroll_hard
                             48 ; ---------------------------------
   0000                      49 _scroll_hard::
   0000 DD E5         [15]   50 	push	ix
   0002 DD 21 00 00   [14]   51 	ld	ix,#0
   0006 DD 39         [15]   52 	add	ix,sp
   0008 F5            [11]   53 	push	af
                             54 ;src/txt_scroll_hard.c:20: u8* plot=screen_plot_address;
   0009 DD 7E 06      [19]   55 	ld	a, 6 (ix)
   000C DD 77 FE      [19]   56 	ld	-2 (ix), a
   000F DD 7E 07      [19]   57 	ld	a, 7 (ix)
   0012 DD 77 FF      [19]   58 	ld	-1 (ix), a
                             59 ;src/txt_scroll_hard.c:23: div=step/8;
   0015 DD 6E 04      [19]   60 	ld	l,4 (ix)
   0018 DD 66 05      [19]   61 	ld	h,5 (ix)
   001B CB 7C         [ 8]   62 	bit	7, h
   001D 28 04         [12]   63 	jr	Z,00106$
   001F 01 07 00      [10]   64 	ld	bc, #0x0007
   0022 09            [11]   65 	add	hl, bc
   0023                      66 00106$:
   0023 CB 3C         [ 8]   67 	srl	h
   0025 CB 1D         [ 8]   68 	rr	l
   0027 CB 3C         [ 8]   69 	srl	h
   0029 CB 1D         [ 8]   70 	rr	l
   002B CB 3C         [ 8]   71 	srl	h
   002D CB 1D         [ 8]   72 	rr	l
                             73 ;src/txt_scroll_hard.c:24: mod=step%8;
   002F E5            [11]   74 	push	hl
   0030 01 08 00      [10]   75 	ld	bc, #0x0008
   0033 C5            [11]   76 	push	bc
   0034 DD 4E 04      [19]   77 	ld	c,4 (ix)
   0037 DD 46 05      [19]   78 	ld	b,5 (ix)
   003A C5            [11]   79 	push	bc
   003B CDr00r00      [17]   80 	call	__modsint
   003E F1            [10]   81 	pop	af
   003F F1            [10]   82 	pop	af
   0040 4D            [ 4]   83 	ld	c, l
   0041 44            [ 4]   84 	ld	b, h
   0042 E1            [10]   85 	pop	hl
                             86 ;src/txt_scroll_hard.c:25: div=div%105;
   0043 C5            [11]   87 	push	bc
   0044 11 69 00      [10]   88 	ld	de, #0x0069
   0047 D5            [11]   89 	push	de
   0048 E5            [11]   90 	push	hl
   0049 CDr00r00      [17]   91 	call	__moduint
   004C F1            [10]   92 	pop	af
   004D F1            [10]   93 	pop	af
   004E C1            [10]   94 	pop	bc
                             95 ;src/txt_scroll_hard.c:26: if (texte[div]==' ') {
   004F 11r8Ar00      [10]   96 	ld	de, #_texte+0
   0052 19            [11]   97 	add	hl, de
   0053 5E            [ 7]   98 	ld	e, (hl)
   0054 7B            [ 4]   99 	ld	a, e
   0055 D6 20         [ 7]  100 	sub	a, #0x20
   0057 20 05         [12]  101 	jr	NZ,00102$
                            102 ;src/txt_scroll_hard.c:27: o=0;
   0059 11 00 00      [10]  103 	ld	de, #0x0000
   005C 18 09         [12]  104 	jr	00103$
   005E                     105 00102$:
                            106 ;src/txt_scroll_hard.c:29: o=texte[div]-'?';
   005E 16 00         [ 7]  107 	ld	d, #0x00
   0060 7B            [ 4]  108 	ld	a, e
   0061 C6 C1         [ 7]  109 	add	a, #0xc1
   0063 5F            [ 4]  110 	ld	e, a
   0064 7A            [ 4]  111 	ld	a, d
   0065 CE FF         [ 7]  112 	adc	a, #0xff
   0067                     113 00103$:
                            114 ;src/txt_scroll_hard.c:32: pointeur=(u16)g_tile_fontmap32x32plat_000+o*8*(32*2)+mod*(32*2);
   0067 21r00r00      [10]  115 	ld	hl, #_g_tile_fontmap32x32plat_000
   006A 7B            [ 4]  116 	ld	a, e
   006B 87            [ 4]  117 	add	a, a
   006C 57            [ 4]  118 	ld	d, a
   006D 1E 00         [ 7]  119 	ld	e, #0x00
   006F 19            [11]  120 	add	hl,de
   0070 EB            [ 4]  121 	ex	de,hl
   0071 69            [ 4]  122 	ld	l, c
   0072 60            [ 4]  123 	ld	h, b
   0073 29            [11]  124 	add	hl, hl
   0074 29            [11]  125 	add	hl, hl
   0075 29            [11]  126 	add	hl, hl
   0076 29            [11]  127 	add	hl, hl
   0077 29            [11]  128 	add	hl, hl
   0078 29            [11]  129 	add	hl, hl
   0079 19            [11]  130 	add	hl, de
                            131 ;src/txt_scroll_hard.c:34: cpct_drawSprite((u8*)pointeur, plot, G_TILE_FONTMAP32X32PLAT_000_W, G_TILE_FONTMAP32X32PLAT_000_H);
   007A C1            [10]  132 	pop	bc
   007B C5            [11]  133 	push	bc
   007C 11 02 20      [10]  134 	ld	de, #0x2002
   007F D5            [11]  135 	push	de
   0080 C5            [11]  136 	push	bc
   0081 E5            [11]  137 	push	hl
   0082 CDr00r00      [17]  138 	call	_cpct_drawSprite
   0085 DD F9         [10]  139 	ld	sp, ix
   0087 DD E1         [14]  140 	pop	ix
   0089 C9            [10]  141 	ret
   008A                     142 _texte:
   008A 57 45 20 57 49 53   143 	.ascii "WE WISH YOU A MERRY CHRISTMAS WE WISH YOU A MERRY CHRISTMAS "
        48 20 59 4F 55 20
        41 20 4D 45 52 52
        59 20 43 48 52 49
        53 54 4D 41 53 20
        57 45 20 57 49 53
        48 20 59 4F 55 20
        41 20 4D 45 52 52
        59 20 43 48 52 49
        53 54 4D 41 53 20
   00C6 41 4E 44 20 41 20   144 	.ascii "AND A HAPPY NEW YEAR FROM THSF AND TETALAB   AZERTYUIOPQSDFG"
        48 41 50 50 59 20
        4E 45 57 20 59 45
        41 52 20 46 52 4F
        4D 20 54 48 53 46
        20 41 4E 44 20 54
        45 54 41 4C 41 42
        20 20 20 41 5A 45
        52 54 59 55 49 4F
        50 51 53 44 46 47
   0102 48 20 20 20 20 20   145 	.ascii "H       "
        20 20
   010A 00                  146 	.db 0x00
                            147 	.area _CODE
                            148 	.area _INITIALIZER
                            149 	.area _CABS (ABS)
