                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.8 #9946 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module txt_scroll
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _scroll
                             12 	.globl _cpct_getScreenPtr
                             13 	.globl _cpct_drawSprite
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _INITIALIZED
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area _DABS (ABS)
                             29 ;--------------------------------------------------------
                             30 ; global & static initialisations
                             31 ;--------------------------------------------------------
                             32 	.area _HOME
                             33 	.area _GSINIT
                             34 	.area _GSFINAL
                             35 	.area _GSINIT
                             36 ;--------------------------------------------------------
                             37 ; Home
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _HOME
                             41 ;--------------------------------------------------------
                             42 ; code
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 ;src/txt_scroll.c:4: void scroll(char * texte, unsigned int l) {
                             46 ;	---------------------------------
                             47 ; Function scroll
                             48 ; ---------------------------------
   0000                      49 _scroll::
   0000 DD E5         [15]   50 	push	ix
   0002 DD 21 00 00   [14]   51 	ld	ix,#0
   0006 DD 39         [15]   52 	add	ix,sp
   0008 3B            [ 6]   53 	dec	sp
                             54 ;src/txt_scroll.c:8: for(c=0;c<l;c=c+1) {
   0009 DD 36 FF 00   [19]   55 	ld	-1 (ix), #0x00
   000D                      56 00105$:
   000D DD 7E FF      [19]   57 	ld	a, -1 (ix)
   0010 06 00         [ 7]   58 	ld	b, #0x00
   0012 DD 96 06      [19]   59 	sub	a, 6 (ix)
   0015 78            [ 4]   60 	ld	a, b
   0016 DD 9E 07      [19]   61 	sbc	a, 7 (ix)
   0019 30 4C         [12]   62 	jr	NC,00107$
                             63 ;src/txt_scroll.c:9: if (texte[c]!=' ') {
   001B DD 7E 04      [19]   64 	ld	a, 4 (ix)
   001E DD 86 FF      [19]   65 	add	a, -1 (ix)
   0021 6F            [ 4]   66 	ld	l, a
   0022 DD 7E 05      [19]   67 	ld	a, 5 (ix)
   0025 CE 00         [ 7]   68 	adc	a, #0x00
   0027 67            [ 4]   69 	ld	h, a
   0028 4E            [ 7]   70 	ld	c, (hl)
   0029 79            [ 4]   71 	ld	a, c
   002A D6 20         [ 7]   72 	sub	a, #0x20
   002C 28 34         [12]   73 	jr	Z,00106$
                             74 ;src/txt_scroll.c:10: o=texte[c]-'A';
   002E 06 00         [ 7]   75 	ld	b, #0x00
   0030 79            [ 4]   76 	ld	a, c
   0031 C6 BF         [ 7]   77 	add	a, #0xbf
   0033 4F            [ 4]   78 	ld	c, a
   0034 78            [ 4]   79 	ld	a, b
   0035 CE FF         [ 7]   80 	adc	a, #0xff
   0037 47            [ 4]   81 	ld	b, a
                             82 ;src/txt_scroll.c:11: p = cpct_getScreenPtr(CPCT_VMEM_START, c*G_TILE_FONTMAP20X22_00_W,120-1);
   0038 DD 7E FF      [19]   83 	ld	a, -1 (ix)
   003B 5F            [ 4]   84 	ld	e, a
   003C 87            [ 4]   85 	add	a, a
   003D 87            [ 4]   86 	add	a, a
   003E 83            [ 4]   87 	add	a, e
   003F 87            [ 4]   88 	add	a, a
   0040 57            [ 4]   89 	ld	d, a
   0041 C5            [11]   90 	push	bc
   0042 3E 77         [ 7]   91 	ld	a, #0x77
   0044 F5            [11]   92 	push	af
   0045 33            [ 6]   93 	inc	sp
   0046 D5            [11]   94 	push	de
   0047 33            [ 6]   95 	inc	sp
   0048 21 00 C0      [10]   96 	ld	hl, #0xc000
   004B E5            [11]   97 	push	hl
   004C CDr00r00      [17]   98 	call	_cpct_getScreenPtr
   004F EB            [ 4]   99 	ex	de,hl
                            100 ;src/txt_scroll.c:12: cpct_drawSprite(g_tile_tileset[o], p, G_TILE_FONTMAP20X22_00_W, G_TILE_FONTMAP20X22_00_H);
   0050 E1            [10]  101 	pop	hl
   0051 29            [11]  102 	add	hl, hl
   0052 01r00r00      [10]  103 	ld	bc, #_g_tile_tileset
   0055 09            [11]  104 	add	hl, bc
   0056 4E            [ 7]  105 	ld	c, (hl)
   0057 23            [ 6]  106 	inc	hl
   0058 46            [ 7]  107 	ld	b, (hl)
   0059 21 0A 16      [10]  108 	ld	hl, #0x160a
   005C E5            [11]  109 	push	hl
   005D D5            [11]  110 	push	de
   005E C5            [11]  111 	push	bc
   005F CDr00r00      [17]  112 	call	_cpct_drawSprite
   0062                     113 00106$:
                            114 ;src/txt_scroll.c:8: for(c=0;c<l;c=c+1) {
   0062 DD 34 FF      [23]  115 	inc	-1 (ix)
   0065 18 A6         [12]  116 	jr	00105$
   0067                     117 00107$:
   0067 33            [ 6]  118 	inc	sp
   0068 DD E1         [14]  119 	pop	ix
   006A C9            [10]  120 	ret
                            121 	.area _CODE
                            122 	.area _INITIALIZER
                            123 	.area _CABS (ABS)
